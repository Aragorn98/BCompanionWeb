{"version":3,"sources":["components/listItems.js","components/Places.js","components/Groups.js","components/Hikes.js","components/PlacesByCity.js","components/PlaceDescription.js","components/GroupDescription.js","components/GroupsByUser.js","components/HikeDescription.js","components/HikesByUser.js","components/MainPage.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["mainListItems","to","style","textDecoration","color","activeStyle","ListItem","button","ListItemIcon","ListItemText","primary","href","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","media","height","grid","link","Places","props","useState","cities","setCities","loading","setLoading","getPlacesFunction","a","axios","get","then","response","data","console","log","useEffect","classes","Grid","container","direction","justify","alignItems","map","city","index","className","item","xs","md","lg","cityName","Card","CardActionArea","CardMedia","component","alt","image","cityPhoto","title","CardContent","Typography","gutterBottom","variant","CircularProgress","loader","Groups","groups","setGroups","getGroups","group","groupName","groupPhoto","numberOfMembers","Divider","numberOfHikes","Hikes","hikes","setHikes","getHikes","hike","hikeId","hikeName","placeName","PlacesByCity","match","useRouteMatch","places","setPlaces","getPlaceFunction","params","place","placePhoto","margin","gridList","flexWrap","transform","titleBar","background","cover","width","details","display","flexDirection","PlaceDescription","placeDescription","setPlaceDescription","placeExtraDescription","setExtraPlaceDescription","placeWeatherForWeek","setPlaceWeatherForWeek","getPlaceDescription","catch","error","getExtraPlaceDescription","getPlaceWeatherForWeek","GridList","cols","placePhotos","split","url","GridListTile","src","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","green","marginRight","heading","ExpansionPanelDetails","routeByCarText","routeByWalkingText","weather","marginLeft","marginTop","backgroundColor","date","day","dayDegree","nightDegree","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","GroupDescription","groupDescription","setGroupDescription","joined","setJoined","getGroupDescription","i","members","length","phoneNumber","localStorage","getItem","join","React","expanded","setExpanded","USER_TOKEN","leaveGroup","post","headers","joinGroup","openS","setOpenS","openL","setOpenL","handleClose","event","reason","Alert","elevation","CardHeader","subheader","groupLinks","admins","CardActions","disableSpacing","IconButton","aria-label","onClick","clsx","expand","expandOpen","aria-expanded","Collapse","in","timeout","unmountOnExit","List","divider","member","ListItemAvatar","Avatar","name","photo","surname","hikesHistory","hikePhoto","startDate","endDate","Snackbar","open","autoHideDuration","onClose","severity","groupsByUser","setGroupsByUser","getGroupsByUser","HikeDescription","hikeDescription","setHikeDescription","getHikeDescription","leaveHike","joinHike","startTime","endTime","gatheringPlace","hikeByCar","withOvernightStay","value","setValue","upcomingHikesByUser","setUpcomingHikesByUser","pastHikesByUser","setPastHikesByUser","getUpcomingHikesByUser","Authorization","getPastHikesByUser","TabContext","AppBar","position","TabList","onChange","newValue","Tab","label","TabPanel","Button","size","MainPage","Copyright","align","Link","Date","getFullYear","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","modal","border","boxShadow","shadows","nested","paddingLeft","Dashboard","userInfo","setUserInfo","getUserInfo","openM","setOpenM","setOpen","CssBaseline","Toolbar","edge","noWrap","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","clear","window","location","Drawer","Container","maxWidth","Paper","path","exact","render","userToken","GroupsByUser","HikesByUser","Box","pt","App","URL","searchParams","userPhoneNum","encodeURIComponent","setItem","getUserToken","JSON","stringify","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.61cad4ef.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport FilterHdrIcon from '@material-ui/icons/FilterHdr';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const mainListItems = (\r\n    <div>\r\n        <NavLink to=\"/places\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <DashboardIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Места\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/groupsByUser\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <SupervisedUserCircleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Мои группы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/groups\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <PeopleIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Все группы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/hikesByUser\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <FilterHdrIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Мои походы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/hikes\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <MapIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\" Все походы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <a href=\"https://www.kazatk.kz/myrzabek/support.html\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <HelpIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Поддержка\"/>\r\n            </ListItem>\r\n        </a>\r\n\r\n    </div>\r\n);\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000',\r\n    },\r\n}));\r\n\r\nconst URL = \"/places\";\r\n\r\nconst Places = (props) => {\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getPlacesFunction = async () => {\r\n        try {\r\n            const data = await axios\r\n                .get(\"https://stormy-escarpment-89406.herokuapp.com/cities\")\r\n                .then(response => {\r\n                    setCities(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getPlacesFunction();\r\n    }, [])\r\n\r\n    /*useEffect( () => {\r\n        axios.get(\"https://stormy-escarpment-89406.herokuapp.com/cities\")\r\n            .then(response => {\r\n                setCities(response.data);\r\n            })\r\n    }, []);*/\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div>\r\n            {loading ?\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"flex-start\"\r\n                    spacing={5}\r\n                >\r\n                    {cities && cities.map((city, index) =>\r\n                        <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                            <Link to={`${URL}/${city.cityName}`} className={classes.link}>\r\n\r\n                                <Card className={classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt=\"Contemplative Reptile\"\r\n                                            height=\"140\"\r\n                                            image={city.cityPhoto}\r\n                                            title=\"Contemplative Reptile\"\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {city.cityName}\r\n                                            </Typography>\r\n\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n\r\n                                </Card>\r\n                            </Link>\r\n\r\n                        </Grid>)}\r\n\r\n                </Grid>\r\n                :\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"flex-start\"\r\n                    spacing={5}\r\n                >\r\n                    <CircularProgress className={classes.loader}/>\r\n                </Grid>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default Places;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/groupDescription\";\r\n\r\n\r\nconst Groups = (props) => {\r\n    const [groups, setGroups] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    const getGroups = async() => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/groups/getByActivity\")\r\n                .then(response => {\r\n                    setGroups(response.data);\r\n                });\r\n            setLoading(true);\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        getGroups()\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        {groups && groups.map((group, index) =>\r\n                            <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                <Link to={`${URL}/${group.groupName}`} className={classes.link}>\r\n\r\n                                <Card className={classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={group.groupName}\r\n                                            height=\"140\"\r\n                                            image={group.groupPhoto}\r\n                                            title={group.groupName}\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {group.groupName}\r\n                                            </Typography>\r\n                                            {/*<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Количество участников: {group.numberOfMembers}\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Совершено походов: {group.numberOfHikes}\r\n                                    </Typography>*/}\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                Количество участников: {group.numberOfMembers}\r\n                                                <Divider />\r\n                                                Совершено походов: {group.numberOfHikes}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                                </Link>\r\n                            </Grid>)}\r\n\r\n                    </Grid>\r\n\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n                }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Groups;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/hikeDescription\";\r\n\r\nconst Hikes = (props) => {\r\n\r\n    const [hikes, setHikes] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getHikes = async() => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/hikes/getUpcomingAll\")\r\n                .then(response => {\r\n                    setHikes(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        getHikes()\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        {hikes && hikes.map((hike, index) =>\r\n                            <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                <Link to={`${URL}/${hike.hikeId}`} className={classes.link}>\r\n\r\n                                <Card className={classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={hike.hikeName}\r\n                                            height=\"140\"\r\n                                            image={hike.groupPhoto}\r\n                                            title={hike.hikeName}\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {hike.placeName}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                                </Link>\r\n                            </Grid>)}\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default Hikes;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Link, useRouteMatch} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000',\r\n    }\r\n}));\r\n\r\nconst URL = \"/placeDescription\";\r\n\r\nconst PlacesByCity = (props) => {\r\n\r\n    const match = useRouteMatch('/places/:cityName');\r\n\r\n    const [places, setPlaces] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getPlaceFunction = async () => {\r\n        try {\r\n            const data = await axios\r\n                .get(`https://stormy-escarpment-89406.herokuapp.com/places/byCity?city_name=${match.params.cityName}`)\r\n                .then(response => {\r\n                    setPlaces(response.data);\r\n                })\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getPlaceFunction();\r\n    }, [])\r\n    /* useEffect( () => {\r\n         axios.get(`https://stormy-escarpment-89406.herokuapp.com/places/byCity?city_name=${match.params.cityName}`)\r\n             .then(response => {\r\n                 setPlaces(response.data);\r\n             })\r\n     }, []);*/\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        {places && places.map((place, index) =>\r\n                            <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                <Link to={`${URL}/${place.placeName}`} className={classes.link}>\r\n\r\n                                    <Card className={classes.root}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                alt={place.placeName}\r\n                                                height=\"140\"\r\n                                                image={place.placePhoto}\r\n                                                title={place.placeName}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                    {place.placeName}\r\n                                                </Typography>\r\n\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n\r\n                                    </Card>\r\n                                </Link>\r\n                            </Grid>)}\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress className={classes.loader}/>\r\n                    </Grid>}\r\n        </div>\r\n    );\r\n};\r\nexport default PlacesByCity;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport axios from \"axios\"\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport {green} from \"@material-ui/core/colors\";\r\nimport CommuteIcon from '@material-ui/icons/Commute';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: 10,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n        color: \"white\",\r\n    },\r\n    titleBar: {\r\n        background:\r\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n    cover: {\r\n        width: 151,\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n}));\r\n\r\n\r\nconst PlaceDescription = (props) => {\r\n    const match = useRouteMatch('/placeDescription/:placeName');\r\n\r\n    const [placeDescription, setPlaceDescription] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [placeExtraDescription, setExtraPlaceDescription] = useState([]);\r\n    const [placeWeatherForWeek, setPlaceWeatherForWeek] = useState([]);\r\n\r\n    const getPlaceDescription = async () => {\r\n        try {\r\n            const data = await axios\r\n                .get(`https://stormy-escarpment-89406.herokuapp.com/placeDescription?place_name=${match.params.placeName}`)\r\n                .then(response => {\r\n                    setPlaceDescription(response.data);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log('No place description');\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    const getExtraPlaceDescription = async () => {\r\n        try {\r\n            const data = await axios\r\n                .get(`https://stormy-escarpment-89406.herokuapp.com/placeRoute?place_name=${match.params.placeName}`)\r\n                .then(response => {\r\n                    setExtraPlaceDescription(response.data);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log('No Extra place description');\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    const getPlaceWeatherForWeek = async () => {\r\n        try {\r\n            const data = await axios\r\n                .get(`https://stormy-escarpment-89406.herokuapp.com/weather/week?place_name=${match.params.placeName}`)\r\n                .then(response => {\r\n                    setPlaceWeatherForWeek(response.data);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log('No weather info for place');\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlaceDescription();\r\n        getExtraPlaceDescription();\r\n        getPlaceWeatherForWeek();\r\n    }, []);\r\n    /* useEffect(() => {\r\n         axios.get(`https://stormy-escarpment-89406.herokuapp.com/placeDescription?place_name=${match.params.placeName}`)\r\n             .then(response => {\r\n                 setPlaceDescription(response.data);\r\n             })\r\n     }, []);*/\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <Card className={classes.root}>\r\n                                <CardActionArea>\r\n                                    <GridList className={classes.gridList} cols={2.5}>\r\n\r\n                                        {\r\n                                            placeDescription && placeDescription.placePhotos && placeDescription.placePhotos.split(',').map((url, index) =>\r\n\r\n                                                <GridListTile>\r\n                                                    <img src={url} alt={match.params.placeName}/>\r\n                                                </GridListTile>\r\n                                            )\r\n                                        }\r\n                                    </GridList>\r\n\r\n\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            {match.params.placeName}\r\n                                        </Typography>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel1a-content\"\r\n                                                id=\"panel1a-header\"\r\n                                            >\r\n                                                <DescriptionIcon style={{color: green[500], marginRight: 10}}/>\r\n                                                <Typography className={classes.heading}> Описание места</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <Typography>\r\n                                                    {placeDescription.placeDescription}\r\n                                                </Typography>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel1a-content\"\r\n                                                id=\"panel1a-header\"\r\n                                            >\r\n                                                <CommuteIcon style={{color: green[500], marginRight: 10}}/>\r\n                                                <Typography className={classes.heading}> Как доехать на\r\n                                                    транспорте</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <Typography>\r\n                                                    {placeExtraDescription ? placeExtraDescription.routeByCarText : 'Информация отсутствует'}\r\n                                                </Typography>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel1a-content\"\r\n                                                id=\"panel1a-header\"\r\n                                            >\r\n                                                <DirectionsWalkIcon style={{color: green[500], marginRight: 10}}/>\r\n                                                <Typography className={classes.heading}> Как дойти пешком</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <Typography>\r\n                                                    {placeExtraDescription ? placeExtraDescription.routeByWalkingText : 'Информация отсутствует'}\r\n\r\n                                                </Typography>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel1a-content\"\r\n                                                id=\"panel1a-header\"\r\n                                            >\r\n                                                <CloudIcon style={{color: green[500], marginRight: 10}}/>\r\n                                                <Typography className={classes.heading}> Погода на ближайшую\r\n                                                    неделю</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <Grid\r\n                                                    container\r\n                                                    direction=\"row\"\r\n                                                    justify=\"center\"\r\n                                                    alignItems=\"flex-start\"\r\n                                                    spacing={2}\r\n                                                >\r\n                                                    {placeWeatherForWeek && placeWeatherForWeek.map((weather,) =>\r\n                                                        <Grid item xs={6} md={3} lg={3}>\r\n                                                            <Card className={classes.root}>\r\n                                                                <CardActionArea>\r\n                                                                    <CardMedia\r\n                                                                        component=\"img\"\r\n                                                                        alt={weather.placeName}\r\n                                                                        style={{height: 50, width: 50, marginLeft: 15, marginTop: 5}}\r\n                                                                        image={weather.image}\r\n                                                                        title={weather.placeName}\r\n                                                                    />\r\n                                                                    <CardContent style={{backgroundColor: '#6DC068'}}>\r\n                                                                        <Typography variant=\"body2\" component=\"p\">\r\n                                                                        {weather.date} | {weather.day}\r\n                                                                        </Typography>\r\n                                                                        <Typography variant=\"body2\" style={{color: '#fff'}} component=\"p\">\r\n                                                                            Днем: {weather.dayDegree}\r\n                                                                        </Typography>\r\n                                                                        <Typography variant=\"body2\" style={{color: '#fff'}} component=\"p\">\r\n                                                                            Ночью: {weather.nightDegree}\r\n                                                                        </Typography>\r\n                                                                    </CardContent>\r\n                                                                </CardActionArea>\r\n\r\n                                                            </Card>\r\n                                                        </Grid>\r\n                                                    )}\r\n                                                </Grid>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel1a-content\"\r\n                                                id=\"panel1a-header\"\r\n                                            >\r\n                                                <InfoIcon style={{color: green[500], marginRight: 10}}/>\r\n                                                <Typography className={classes.heading}> Советы</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <Typography>\r\n                                                    <b>Правила похода:</b> <br/>\r\n                                                    Быть ВО время;<br/>\r\n                                                    Не обгонять проводника, есть риск пойти не туда и потеряться;<br/>\r\n                                                    Не забудьте море горячего чая и рюкзаки с вкусной едой<br/>\r\n                                                    Держаться рядом с группой, не отходить от группы в одиночку;<br/>\r\n                                                    Придерживаться предложенного плана;<br/>\r\n                                                    Быть вовремя на месте встречи<br/>\r\n                                                    <br/><b>Как одеваться:</b><br/>\r\n                                                    Если на улице зима то одевайтесь потеплее: теплая куртка, зимние ботинки, теплые штанишки, шапка, перчатки, свитер.\r\n                                                    обувь желательно иметь приспособленную к горам, т.е. не промокающую и с плотной подошвой, зимнюю обувь (трекинговые ботинки)\r\n                                                    теплая куртка и штаны;<br/>\r\n                                                    головной убор и перчатки;<br/>\r\n                                                    Гамаши (фонарики/бахилы), солнцезащитные очки;<br/>\r\n                                                    А если погода теплая то:<br/>\r\n                                                    +Легкая толстовка;<br/>\r\n                                                    + кроссовки или ботинки<br/>\r\n                                                    + Обязательно ГОЛОВНОЙ убор;\r\n                                                    <br/>\r\n                                                    <br/><b>Варианты по питанию:</b><br/>\r\n                                                    Термос с чаем;<br/>\r\n                                                    1 л. питьевой воды;<br/>\r\n                                                    Бутерброды, по возможности – любые другие вкусности.<br/>\r\n                                                    <br/><b>По медикаментам:</b><br/>\r\n                                                    Обезболивающие средства; необходимое именно Вам лекарство (например, от аллергии);<br/>\r\n                                                    <br/><b>Дополнительно</b><br/>\r\n                                                    +крем от загара;<br/>\r\n                                                    +СПРЕЙ ОТ КЛЕЩЕЙ;<br/>\r\n                                                    +солнцезащитные очки;<br/>\r\n                                                    +запасные носки и кофта;<br/>\r\n                                                    Не забывай что мы идём тусить в Горы<br/>\r\n                                                    <b>По питанию🌭:</b><br/>\r\n                                                    +термос с чаем;<br/>\r\n                                                    +вода;<br/>\r\n                                                    +бутерброды;<br/>\r\n                                                    +шоколад и фрукты, и все что душе угодно;<br/>\r\n                                                </Typography>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress className={classes.loader}/>\r\n                    </Grid>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default PlaceDescription;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {Link, useRouteMatch} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport clsx from 'clsx';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport EmojiPeopleOutlinedIcon from '@material-ui/icons/EmojiPeopleOutlined';\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {green} from '@material-ui/core/colors';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: 10,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 250,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\n\r\nconst GroupDescription = (props) => {\r\n\r\n    const match = useRouteMatch('/groupDescription/:groupName');\r\n\r\n    const [groupDescription, setGroupDescription] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [joined, setJoined] = useState(false);\r\n\r\n    const getGroupDescription = async () => {\r\n        const data = await axios\r\n            .get(`https://stormy-escarpment-89406.herokuapp.com/groups/getGroup?group_name=${match.params.groupName}`)\r\n            .then(response => {\r\n                setGroupDescription(response.data);\r\n                for (let i = 0; i < response.data.members.length; i++) {\r\n                    let data = response.data.members[i].phoneNumber;\r\n                    if (data === localStorage.getItem('phoneNum').split('%2B').join('+')) {\r\n                        setJoined(true);\r\n                        break;\r\n                    }\r\n                }\r\n                console.log(joined);\r\n            })\r\n        setLoading(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGroupDescription();\r\n    }, []);\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const USER_TOKEN = localStorage.getItem('token').split('\"').join('');\r\n\r\n    const leaveGroup = async () => {\r\n        try {\r\n            const data = await axios.post(`https://stormy-escarpment-89406.herokuapp.com/groups/leaveGroup?group_name=${match.params.groupName}`,\r\n                USER_TOKEN, {headers: {'Authorization': `${USER_TOKEN}`}}\r\n            )\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    const joinGroup = async () => {\r\n        try {\r\n            const data = await axios.post(`https://stormy-escarpment-89406.herokuapp.com/groups/joinGroup?group_name=${match.params.groupName}`,\r\n                USER_TOKEN, {headers: {'Authorization': `${USER_TOKEN}`}}\r\n            )\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const handleJoinGroup = () => {\r\n        setOpenS(true);\r\n        console.log(USER_TOKEN);\r\n        joinGroup();\r\n    };\r\n    const handleLeaveGroup = () => {\r\n        setOpenL(true);\r\n        console.log(USER_TOKEN);\r\n        leaveGroup();\r\n    };\r\n    const [openS, setOpenS] = React.useState(false);\r\n    const [openL, setOpenL] = React.useState(false);\r\n\r\n    const handleClickS = () => {\r\n        setOpenS(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenS(false);\r\n        setOpenL(false);\r\n    };\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <Card className={classes.root}>\r\n                                <CardHeader\r\n                                    title={groupDescription.groupName}\r\n                                    subheader={`Количество походов: ${groupDescription.numberOfHikes}`}\r\n                                />\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={groupDescription.groupPhoto}\r\n                                    title={groupDescription.groupName}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {groupDescription.groupDescription}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        <a style={{color: \"grey\"}}\r\n                                           href={`https://${groupDescription.groupLinks}`}>Instagram</a>\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {/*<a style={{color: \"grey\"}} href={`https://wa.me/${groupDescription.admins[0].split('+').join('')}`}>Связь с администратором</a>*/}\r\n                                        Админ: {groupDescription.admins[0]}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions disableSpacing>\r\n                                    {/*<IconButton aria-label=\"add to favorites\">*/}\r\n                                    {/*    <FavoriteIcon/>*/}\r\n                                    {/*</IconButton>*/}\r\n\r\n\r\n                                    {\r\n                                        joined ? <IconButton aria-label=\"leave\">\r\n                                                <ExitToAppIcon onClick={handleLeaveGroup}/>\r\n                                            </IconButton>\r\n                                            :\r\n                                            <IconButton aria-label=\"join\">\r\n                                                <AddCircleIcon onClick={handleJoinGroup}/>\r\n                                            </IconButton>\r\n                                    }\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                    <CardContent>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel1a-content\"\r\n                                                id=\"panel1a-header\"\r\n                                            >\r\n                                                <EmojiPeopleOutlinedIcon style={{color: green[500]}}/>\r\n                                                <Typography className={classes.heading}> Участники</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <List divider>\r\n                                                    {groupDescription && groupDescription.members && groupDescription.members\r\n                                                        .map((member, index) =>\r\n\r\n                                                            <ListItem divider alignItems=\"flex-start\">\r\n                                                                <ListItemAvatar>\r\n                                                                    <Avatar alt={member.name} src={member.photo}/>\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText\r\n                                                                    primary={member.name + \" \" + member.surname}\r\n                                                                    secondary={member.phoneNumber}/>\r\n                                                            </ListItem>\r\n                                                        )}\r\n                                                </List>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel2a-content\"\r\n                                                id=\"panel2a-header\"\r\n                                            >\r\n                                                <DirectionsWalkIcon style={{color: green[500]}}/>\r\n                                                <Typography className={classes.heading}> История походов</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <Grid\r\n                                                    container\r\n                                                    direction=\"row\"\r\n                                                    justify=\"center\"\r\n                                                    alignItems=\"flex-start\"\r\n                                                    spacing={5}\r\n                                                >\r\n                                                    {groupDescription && groupDescription.hikesHistory && groupDescription.hikesHistory.map((hike, index) =>\r\n\r\n                                                        <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                                            <Link to={`/hikeDescription/${hike.hikeId}`}\r\n                                                                  className={classes.link}>\r\n                                                                <Card>\r\n                                                                    <CardActionArea>\r\n                                                                        <CardMedia\r\n                                                                            component=\"img\"\r\n                                                                            alt=\"Contemplative Reptile\"\r\n                                                                            height=\"140\"\r\n                                                                            image={hike.hikePhoto}\r\n                                                                            title=\"Contemplative Reptile\"\r\n                                                                        />\r\n                                                                        <CardContent>\r\n                                                                            <Typography gutterBottom variant=\"h5\"\r\n                                                                                        component=\"h2\">\r\n                                                                                {hike.placeName}\r\n                                                                            </Typography>\r\n                                                                            <Typography variant=\"body2\"\r\n                                                                                        color=\"textSecondary\"\r\n                                                                                        component=\"p\">\r\n                                                                                {hike.startDate + \" - \" + hike.endDate}\r\n                                                                            </Typography>\r\n                                                                        </CardContent>\r\n                                                                    </CardActionArea>\r\n                                                                </Card>\r\n                                                            </Link>\r\n                                                        </Grid>\r\n                                                    )}\r\n                                                </Grid>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n\r\n                                    </CardContent>\r\n                                </Collapse>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n            }\r\n            <Snackbar open={openS} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    Вы вступили в группу!\r\n                </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={openL} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"warning\">\r\n                    Вы покинули группу!\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n};\r\nexport default GroupDescription;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/groupDescription\";\r\n\r\nconst Groups = (props) => {\r\n    const [groupsByUser, setGroupsByUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const USER_TOKEN = localStorage.getItem('token').split('\"').join('');\r\n    const getGroupsByUser = async () => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/groups/getByUser\",\r\n                // { crossdomain: true },\r\n                {headers: {'Authorization': USER_TOKEN}},\r\n            )\r\n                .then(response => {\r\n                    setGroupsByUser(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGroupsByUser()\r\n    }, []);\r\n\r\n\r\n    const classes = useStyles();\r\n    if (!(groupsByUser)) {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    loading ?\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            <Typography variant='h6'>Вы не состоите в группах</Typography>\r\n                        </Grid>\r\n                        :\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            <CircularProgress/>\r\n                        </Grid>\r\n                }\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    loading ?\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            {groupsByUser && groupsByUser.map((group, index) =>\r\n                                <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                    <Link to={`${URL}/${group.groupName}`} className={classes.link}>\r\n\r\n                                        <Card className={classes.root}>\r\n                                            <CardActionArea>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt=\"Contemplative Reptile\"\r\n                                                    height=\"140\"\r\n                                                    image={group.groupPhoto}\r\n                                                    title=\"Contemplative Reptile\"\r\n                                                />\r\n                                                <CardContent>\r\n                                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                        {group.groupName}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                        Количество участников: {group.numberOfMembers}\r\n                                                        <Divider/>\r\n                                                        Совершено походов: {group.numberOfHikes}\r\n                                                    </Typography>\r\n\r\n                                                </CardContent>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </Link>\r\n\r\n                                </Grid>)}\r\n                        </Grid>\r\n                        :\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            <CircularProgress/>\r\n                        </Grid>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\nexport default Groups;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {Link, useRouteMatch} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport clsx from 'clsx';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport EmojiPeopleOutlinedIcon from '@material-ui/icons/EmojiPeopleOutlined';\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {green} from '@material-ui/core/colors';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\r\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: 10,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 250,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\n\r\nconst HikeDescription = (props) => {\r\n\r\n    const match = useRouteMatch('/hikeDescription/:hikeId');\r\n\r\n    const [hikeDescription, setHikeDescription] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [joined, setJoined] = useState(false);\r\n    const USER_TOKEN = localStorage.getItem('token').split('\"').join('');\r\n\r\n\r\n    const getHikeDescription = async () => {\r\n        const data = await axios\r\n            .get(`https://stormy-escarpment-89406.herokuapp.com/hikes/getHike?hike_id=${match.params.hikeId}`)\r\n            .then(response => {\r\n                setHikeDescription(response.data);\r\n                for (let i = 0; i < response.data.members.length; i++) {\r\n                    let data = response.data.members[i].phoneNumber;\r\n                    if (data === localStorage.getItem('phoneNum').split('%2B').join('+')) {\r\n                        setJoined(true);\r\n                        break;\r\n                    }\r\n                }\r\n            })\r\n        setLoading(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getHikeDescription();\r\n    }, []);\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n\r\n    const leaveHike = async () => {\r\n        try {\r\n            const data = await axios.post(`https://stormy-escarpment-89406.herokuapp.com/hikes/leaveHike?hike_id=${match.params.hikeId}`,\r\n                USER_TOKEN, {headers: {'Authorization': `${USER_TOKEN}`}}\r\n            )\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    const joinHike = async () => {\r\n        try {\r\n            const data = await axios.post(`https://stormy-escarpment-89406.herokuapp.com/hikes/joinHike?hike_id=${match.params.hikeId}`,\r\n                USER_TOKEN, {headers: {'Authorization': `${USER_TOKEN}`}}\r\n            )\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const handleJoinHike = () => {\r\n        setOpenS(true);\r\n        console.log(USER_TOKEN);\r\n        joinHike();\r\n    };\r\n    const handleLeaveHike = () => {\r\n        setOpenL(true);\r\n        console.log(USER_TOKEN);\r\n        leaveHike();\r\n    };\r\n    const [openS, setOpenS] = React.useState(false);\r\n    const [openL, setOpenL] = React.useState(false);\r\n\r\n    const handleClickS = () => {\r\n        setOpenS(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenS(false);\r\n        setOpenL(false);\r\n    };\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <Card className={classes.root}>\r\n                                <CardHeader\r\n                                    title={`Поход на ${hikeDescription.placeName}`}\r\n                                    subheader={`Организатор: ${hikeDescription.groupName}`}\r\n                                />\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={hikeDescription.hikePhoto}\r\n                                    title={hikeDescription.hikeName}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {hikeDescription.hikeDescription}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {/*<a style={{color: \"grey\"}} href={`https://wa.me/${groupDescription.admins[0].split('+').join('')}`}>Связь с администратором</a>*/}\r\n                                        Админ: {hikeDescription.admins[0]}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions disableSpacing>\r\n                                    {/*<IconButton aria-label=\"add to favorites\">*/}\r\n                                    {/*    <FavoriteIcon/>*/}\r\n                                    {/*</IconButton>*/}\r\n\r\n                                    <Link to={`/placeDescription/${hikeDescription.placeName}`}>\r\n                                        <IconButton aria-label=\"about place\">\r\n                                            <InfoIcon/>\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                    {\r\n                                        joined ? <IconButton aria-label=\"leave\">\r\n                                                <ExitToAppIcon onClick={handleLeaveHike}/>\r\n                                            </IconButton>\r\n                                            :\r\n                                            <IconButton aria-label=\"join\">\r\n                                                <AddCircleIcon onClick={handleJoinHike}/>\r\n                                            </IconButton>\r\n                                    }\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                    <CardContent>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel1a-content\"\r\n                                                id=\"panel1a-header\"\r\n                                            >\r\n                                                <EmojiPeopleOutlinedIcon style={{color: green[500]}}/>\r\n                                                <Typography className={classes.heading}> Участники</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <List divider>\r\n                                                    {hikeDescription && hikeDescription.members && hikeDescription.members\r\n                                                        .map((member, index) =>\r\n\r\n                                                            <ListItem divider alignItems=\"flex-start\">\r\n                                                                <ListItemAvatar>\r\n                                                                    <Avatar alt={member.name} src={member.photo}/>\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText\r\n                                                                    primary={member.name + \" \" + member.surname}\r\n                                                                    secondary={member.phoneNumber}/>\r\n                                                            </ListItem>\r\n                                                        )}\r\n                                                </List>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel2a-content\"\r\n                                                id=\"panel2a-header\"\r\n                                            >\r\n                                                <HelpIcon style={{color: green[500]}}/>\r\n                                                <Typography className={classes.heading}> Полезная\r\n                                                    информация</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <List divider>\r\n                                                    <ListItem divider alignItems=\"flex-start\">\r\n                                                        <ListItemAvatar>\r\n                                                            <AccessTimeIcon/>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary=\"Дата и время сбора\"\r\n                                                            secondary={hikeDescription.startDate+\", \"+hikeDescription.startTime + \" - \" + hikeDescription.endDate + \", \" + hikeDescription.endTime}/>\r\n                                                    </ListItem>\r\n                                                    <ListItem divider alignItems=\"flex-start\">\r\n                                                        <ListItemAvatar>\r\n                                                            <DirectionsIcon/>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary=\"Место сбора\"\r\n                                                            secondary={hikeDescription.gatheringPlace}/>\r\n                                                    </ListItem>\r\n                                                    <ListItem divider alignItems=\"flex-start\">\r\n                                                        <ListItemAvatar>\r\n                                                            <DriveEtaIcon/>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary=\"Поедем на машине?\"\r\n                                                            secondary={hikeDescription.hikeByCar ? 'Да' : 'Нет'}/>\r\n                                                    </ListItem>\r\n                                                    <ListItem divider alignItems=\"flex-start\">\r\n                                                        <ListItemAvatar>\r\n                                                            <NightsStayIcon/>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary=\"С ночевкой?\"\r\n                                                            secondary={hikeDescription.withOvernightStay ? 'Да' : 'Нет'}/>\r\n                                                    </ListItem>\r\n                                                </List>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n\r\n                                    </CardContent>\r\n                                </Collapse>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n            }\r\n            <Snackbar open={openS} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    Вы стали участником похода.\r\n                </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={openL} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"warning\">\r\n                    Вы больше не участник похода.\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n};\r\nexport default HikeDescription;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/hikeDescription\";\r\n\r\nconst Groups = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const [upcomingHikesByUser, setUpcomingHikesByUser] = useState([]);\r\n    const [pastHikesByUser, setPastHikesByUser] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const USER_TOKEN = localStorage.getItem('token').split('\"').join('');\r\n    const getUpcomingHikesByUser = async () => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/hikes/getUpcomingByUser\",\r\n                {headers: {Authorization: USER_TOKEN}}\r\n            )\r\n                .then(response => {\r\n                    setUpcomingHikesByUser(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            setLoading(true);\r\n            console.log(e);\r\n        }\r\n    }\r\n    const getPastHikesByUser = async () => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/hikes/getPastByUser\",\r\n                {headers: {Authorization: USER_TOKEN}}\r\n            )\r\n                .then(response => {\r\n                    setPastHikesByUser(response.data);\r\n                });\r\n            setLoading(true);\r\n\r\n        } catch (e) {\r\n            setLoading(true);\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUpcomingHikesByUser();\r\n        getPastHikesByUser()\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loading ?\r\n                    <TabContext value={value}>\r\n                        <AppBar position=\"static\">\r\n                            <TabList onChange={handleChange} aria-label=\"simple tabs example\">\r\n                                <Tab label=\"Предстоящие\" value=\"1\"/>\r\n                                <Tab label=\"Прошлые\" value=\"2\"/>\r\n                            </TabList>\r\n                        </AppBar>\r\n                        <TabPanel value=\"1\">\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"flex-start\"\r\n                                spacing={5}\r\n                            >\r\n                                {upcomingHikesByUser && upcomingHikesByUser.map((hike, index) =>\r\n                                    <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                        <Link to={`${URL}/${hike.hikeId}`} className={classes.link}>\r\n\r\n                                            <Card className={classes.root}>\r\n                                                <CardActionArea>\r\n                                                    <CardMedia\r\n                                                        component=\"img\"\r\n                                                        alt=\"Contemplative Reptile\"\r\n                                                        height=\"140\"\r\n                                                        image={hike.hikePhoto}\r\n                                                        title=\"Contemplative Reptile\"\r\n                                                    />\r\n                                                    <CardContent>\r\n                                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                            {hike.placeName}\r\n                                                        </Typography>\r\n\r\n                                                    </CardContent>\r\n                                                </CardActionArea>\r\n                                            </Card>\r\n                                        </Link>\r\n\r\n                                    </Grid>)}\r\n                            </Grid>\r\n                        </TabPanel>\r\n                        <TabPanel value=\"2\">\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"flex-start\"\r\n                                spacing={5}\r\n                            >\r\n                                {pastHikesByUser && pastHikesByUser.map((hike, index) =>\r\n                                    <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                        <Card className={classes.root}>\r\n                                            <CardActionArea>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt=\"Contemplative Reptile\"\r\n                                                    height=\"140\"\r\n                                                    image={hike.groupPhoto}\r\n                                                    title=\"Contemplative Reptile\"\r\n                                                />\r\n                                                <CardContent>\r\n                                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                        {hike.placeName}\r\n                                                    </Typography>\r\n\r\n                                                </CardContent>\r\n                                            </CardActionArea>\r\n                                            <CardActions>\r\n                                                <Link to={`${URL}/${hike.hikeId}`} className={classes.link}>\r\n                                                    <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n                                                        Выбрать\r\n                                                    </Button>\r\n                                                </Link>\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                    </Grid>)}\r\n                            </Grid>\r\n                        </TabPanel>\r\n                    </TabContext>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n            }\r\n        </div>\r\n    );\r\n\r\n\r\n};\r\nexport default Groups;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000',\r\n    },\r\n}));\r\n\r\nconst MainPage = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n                spacing={5}\r\n            >\r\n                <Grid className={classes.grid}>\r\n                    <Typography variant=\"h6\">\r\n                        {props.name ? \"Добро пожаловать: \" + props.name + ' ' + props.surname : 'Вы не авторизованы'}\r\n                    </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default MainPage;","import React, {useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport {mainListItems} from './listItems';\r\nimport {Route, useRouteMatch} from \"react-router-dom\"\r\nimport Places from \"./Places\";\r\nimport Groups from \"./Groups\";\r\nimport Hikes from \"./Hikes\";\r\nimport PlacesByCity from \"./PlacesByCity\";\r\nimport PlaceDescription from \"./PlaceDescription\";\r\nimport GroupDescription from \"./GroupDescription\";\r\nimport GroupsByUser from \"./GroupsByUser\";\r\nimport HikeDescription from \"./HikeDescription\";\r\nimport HikesByUser from \"./HikesByUser\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport MainPage from \"./MainPage\";\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://www.bcompanion.kz/\">\r\n                BCompanion\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    const [userInfo, setUserInfo] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getUserInfo = async () => {\r\n        try {\r\n            const data = await axios.get(`https://stormy-escarpment-89406.herokuapp.com/users/getUser?phone_number=${localStorage.getItem('phoneNum')}`\r\n            )\r\n            .then(response => {\r\n                setUserInfo(response.data);\r\n            });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem('phoneNum')=== null){\r\n            console.log('phone num doesnt exist');\r\n        } else {\r\n            getUserInfo();\r\n        }\r\n    }, []);\r\n\r\n    function logOut() {\r\n        localStorage.clear();\r\n        setUserInfo(null);\r\n        window.location.href='https://www.kazatk.kz/myrzabek/bcompanion/index.html?logOut=true';\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const [openM, setOpenM] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpenM(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpenM(false);\r\n    };\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar style={{background: '#6DC068'}} position=\"absolute\"\r\n                    className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        BCompanion\r\n                    </Typography>\r\n                    { loading ?\r\n                    <div>\r\n\r\n\r\n                        <Avatar onClick={handleOpen} alt=\"Avatar\"\r\n                                src=\"https://i.ibb.co/VqncVzX/avatar.png\"/>\r\n                        <Modal\r\n                            aria-labelledby=\"transition-modal-title\"\r\n                            aria-describedby=\"transition-modal-description\"\r\n                            className={classes.modal}\r\n                            open={openM}\r\n                            onClose={handleClose}\r\n                            closeAfterTransition\r\n                            BackdropComponent={Backdrop}\r\n                            BackdropProps={{\r\n                                timeout: 500,\r\n                            }}\r\n                        >\r\n                            <Fade in={openM}>\r\n                                <div className={classes.paper}>\r\n                                    <h2 id=\"transition-modal-title\">{userInfo ? userInfo.name : <a href='https://www.kazatk.kz/myrzabek/bcompanion/index.html?logOut=true'>Login</a>} {userInfo ? userInfo.surname : ''}</h2>\r\n                                    <p id=\"transition-modal-description\">{userInfo ? userInfo.phoneNumber : ''}</p>\r\n                                    {userInfo ? <Button onClick={logOut} variant='contained' color='secondary'>\r\n                                        Выйти\r\n                                    </Button> : ''}\r\n                                </div>\r\n                            </Fade>\r\n                        </Modal>\r\n\r\n                    </div>\r\n                            :\r\n                            <CircularProgress/>\r\n                            }\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>{mainListItems}</List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        {/* Chart */}\r\n                        <Grid item xs={12} md={8} lg={12}>\r\n                            <Paper>\r\n                                {loading ?\r\n                                    <Route path='/' exact render={() => <MainPage name={ userInfo ? userInfo.name : ''} surname = {userInfo ?userInfo.surname: ''}/>}/>\r\n                                    :\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"center\"\r\n                                        alignItems=\"flex-start\"\r\n                                        spacing={5}\r\n                                    >\r\n                                        <CircularProgress/>\r\n                                    </Grid>\r\n                                }\r\n                                <Route path='/places' exact render={() => <Places/>}/>\r\n                                <Route path='/places/:cityName'\r\n                                       render={() => <PlacesByCity/>}/>\r\n                                <Route path='/groups' exact render={() => <Groups/>}/>\r\n                                <Route path='/groupsByUser' userToken={props.userToken} exact\r\n                                       render={() => <GroupsByUser/>}/>\r\n                                <Route path='/groupDescription/:groupName'\r\n                                       render={() => <GroupDescription/>}/>\r\n                                <Route path='/hikes' render={() => <Hikes/>}/>\r\n\r\n                                <Route path='/placeDescription/:placeName'\r\n                                       render={() => <PlaceDescription/>}/>\r\n                                <Route path='/hikeDescription/:hikeId'\r\n                                       render={() => <HikeDescription/>}/>\r\n                                <Route path='/hikesByUser'\r\n                                       render={() => <HikesByUser/>}/>\r\n\r\n                                {/*\r\n                                <Redirect from='/' to='/places'/>\r\n*/}\r\n\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright/>\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Dashboard from \"./components/Dashboard\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction App() {\n    let url = window.location.href;\n    let params = (new URL(url)).searchParams;\n    let userPhoneNum = encodeURIComponent(params.get('phoneNum'));\n    if (userPhoneNum === null){\n\n    } else {\n        localStorage.setItem('phoneNum', userPhoneNum);\n    }\n    const [userToken, setUserToken] = useState(null);\n\n    const getUserToken = async () => {\n        try {\n            if (!(userPhoneNum)){\n                console.log(\"userPhoneNum is null\");\n            } else if (userPhoneNum) {\n                if (localStorage.getItem('token') === null || localStorage.getItem('phoneNum') === null) {\n\n                    const data = await axios\n                        .get(`https://stormy-escarpment-89406.herokuapp.com/users/getToken?phone_number=${localStorage.getItem('phoneNum')}`)\n                        .then(response => {\n                            localStorage.setItem('token', JSON.stringify(response.data));\n                            localStorage.setItem('phoneNum', userPhoneNum);\n                        })\n                        .catch(function (error) {\n                            console.log('No such user! Error in getting token!');\n                        });\n                } else if ((localStorage.getItem('phoneNum')) && localStorage.getItem('phoneNum') !== userPhoneNum){\n                    localStorage.clear();\n                    const data = await axios\n                        .get(`https://stormy-escarpment-89406.herokuapp.com/users/getToken?phone_number=${localStorage.getItem('phoneNum')}`)\n                        .then(response => {\n                            localStorage.setItem('token', JSON.stringify(response.data));\n                            localStorage.setItem('phoneNum', userPhoneNum);\n                        })\n                        .catch(function (error) {\n                            console.log('No such user! Error in getting token!');\n                        });\n                }\n            }\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    const [groupsByUser, setGroupsByUser] = useState([]);\n\n\n\n    useEffect(() => {\n        getUserToken();\n        console.log(\"User is logged in: \" + localStorage.getItem('token'));\n    }, userToken, groupsByUser);\n\n    return (\n        <BrowserRouter>\n            <div>\n                <Dashboard/>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}