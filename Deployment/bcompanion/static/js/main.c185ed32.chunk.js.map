{"version":3,"sources":["components/listItems.js","components/Places.js","components/Groups.js","components/Hikes.js","components/PlacesByCity.js","components/PlaceDescription.js","components/GroupDescription.js","components/GroupsByUser.js","components/HikeDescription.js","components/HikesByUser.js","components/MainPage.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["mainListItems","to","style","textDecoration","color","activeStyle","ListItem","button","ListItemIcon","ListItemText","primary","href","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","media","height","grid","link","Places","props","useState","cities","setCities","loading","setLoading","getPlacesFunction","a","axios","get","then","response","data","console","log","useEffect","classes","Grid","container","direction","justify","alignItems","map","city","index","className","item","xs","md","lg","cityName","Card","CardActionArea","CardMedia","component","alt","image","cityPhoto","title","CardContent","Typography","gutterBottom","variant","CircularProgress","loader","Groups","groups","setGroups","getGroups","group","groupName","groupPhoto","numberOfMembers","Divider","numberOfHikes","Hikes","hikes","setHikes","getHikes","hike","hikeId","hikeName","placeName","PlacesByCity","match","useRouteMatch","places","setPlaces","getPlaceFunction","params","place","placePhoto","margin","gridList","flexWrap","transform","titleBar","background","PlaceDescription","placeDescription","setPlaceDescription","getPlaceDescription","catch","error","GridList","cols","placePhotos","split","url","GridListTile","src","GridListTileBar","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","GroupDescription","groupDescription","setGroupDescription","joined","setJoined","getGroupDescription","i","members","length","phoneNumber","localStorage","getItem","join","React","expanded","setExpanded","USER_TOKEN","leaveGroup","post","headers","joinGroup","openS","setOpenS","openL","setOpenL","handleClose","event","reason","Alert","elevation","CardHeader","subheader","groupLinks","admins","CardActions","disableSpacing","IconButton","aria-label","onClick","clsx","expand","expandOpen","aria-expanded","Collapse","in","timeout","unmountOnExit","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","green","ExpansionPanelDetails","List","divider","member","ListItemAvatar","Avatar","name","photo","surname","hikesHistory","hikePhoto","startDate","endDate","Button","size","Snackbar","open","autoHideDuration","onClose","severity","groupsByUser","setGroupsByUser","getGroupsByUser","HikeDescription","hikeDescription","setHikeDescription","getHikeDescription","leaveHike","joinHike","startTime","endTime","gatheringPlace","hikeByCar","withOvernightStay","backgroundColor","value","setValue","upcomingHikesByUser","setUpcomingHikesByUser","pastHikesByUser","setPastHikesByUser","getUpcomingHikesByUser","Authorization","getPastHikesByUser","TabContext","AppBar","position","TabList","onChange","newValue","Tab","label","TabPanel","MainPage","Copyright","align","Link","Date","getFullYear","display","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","modal","border","boxShadow","shadows","nested","paddingLeft","Dashboard","userInfo","setUserInfo","getUserInfo","openM","setOpenM","setOpen","CssBaseline","Toolbar","edge","noWrap","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","clear","window","location","Drawer","Container","maxWidth","Paper","path","exact","render","userToken","GroupsByUser","HikesByUser","Box","pt","App","URL","searchParams","userPhoneNum","encodeURIComponent","setItem","getUserToken","JSON","stringify","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c185ed32.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport FilterHdrIcon from '@material-ui/icons/FilterHdr';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const mainListItems = (\r\n    <div>\r\n        <NavLink to=\"/places\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <DashboardIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Места\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/groupsByUser\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <SupervisedUserCircleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Мои группы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/groups\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <PeopleIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Все группы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/hikesByUser\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <FilterHdrIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Мои походы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/hikes\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <MapIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\" Все походы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <a href=\"https://www.kazatk.kz/myrzabek/support.html\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <HelpIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Поддержка\"/>\r\n            </ListItem>\r\n        </a>\r\n\r\n    </div>\r\n);\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000',\r\n    },\r\n}));\r\n\r\nconst URL = \"/places\";\r\n\r\nconst Places = (props) => {\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getPlacesFunction = async () => {\r\n        try {\r\n            const data = await axios\r\n                .get(\"https://stormy-escarpment-89406.herokuapp.com/cities\")\r\n                .then(response => {\r\n                    setCities(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getPlacesFunction();\r\n    }, [])\r\n\r\n    /*useEffect( () => {\r\n        axios.get(\"https://stormy-escarpment-89406.herokuapp.com/cities\")\r\n            .then(response => {\r\n                setCities(response.data);\r\n            })\r\n    }, []);*/\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div>\r\n            {loading ?\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"flex-start\"\r\n                    spacing={5}\r\n                >\r\n                    {cities && cities.map((city, index) =>\r\n                        <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                            <Link to={`${URL}/${city.cityName}`} className={classes.link}>\r\n\r\n                                <Card className={classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt=\"Contemplative Reptile\"\r\n                                            height=\"140\"\r\n                                            image={city.cityPhoto}\r\n                                            title=\"Contemplative Reptile\"\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {city.cityName}\r\n                                            </Typography>\r\n\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n\r\n                                </Card>\r\n                            </Link>\r\n\r\n                        </Grid>)}\r\n\r\n                </Grid>\r\n                :\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"flex-start\"\r\n                    spacing={5}\r\n                >\r\n                    <CircularProgress className={classes.loader}/>\r\n                </Grid>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default Places;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/groupDescription\";\r\n\r\n\r\nconst Groups = (props) => {\r\n    const [groups, setGroups] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    const getGroups = async() => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/groups/getByActivity\")\r\n                .then(response => {\r\n                    setGroups(response.data);\r\n                });\r\n            setLoading(true);\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        getGroups()\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        {groups && groups.map((group, index) =>\r\n                            <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                <Link to={`${URL}/${group.groupName}`} className={classes.link}>\r\n\r\n                                <Card className={classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={group.groupName}\r\n                                            height=\"140\"\r\n                                            image={group.groupPhoto}\r\n                                            title={group.groupName}\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {group.groupName}\r\n                                            </Typography>\r\n                                            {/*<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Количество участников: {group.numberOfMembers}\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Совершено походов: {group.numberOfHikes}\r\n                                    </Typography>*/}\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                Количество участников: {group.numberOfMembers}\r\n                                                <Divider />\r\n                                                Совершено походов: {group.numberOfHikes}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                                </Link>\r\n                            </Grid>)}\r\n\r\n                    </Grid>\r\n\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n                }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Groups;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/hikeDescription\";\r\n\r\nconst Hikes = (props) => {\r\n\r\n    const [hikes, setHikes] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getHikes = async() => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/hikes/getUpcomingAll\")\r\n                .then(response => {\r\n                    setHikes(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        getHikes()\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        {hikes && hikes.map((hike, index) =>\r\n                            <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                <Link to={`${URL}/${hike.hikeId}`} className={classes.link}>\r\n\r\n                                <Card className={classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt={hike.hikeName}\r\n                                            height=\"140\"\r\n                                            image={hike.groupPhoto}\r\n                                            title={hike.hikeName}\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {hike.placeName}\r\n                                            </Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                                </Link>\r\n                            </Grid>)}\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default Hikes;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Link, useRouteMatch} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000',\r\n    }\r\n}));\r\n\r\nconst URL = \"/placeDescription\";\r\n\r\nconst PlacesByCity = (props) => {\r\n\r\n    const match = useRouteMatch('/places/:cityName');\r\n\r\n    const [places, setPlaces] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getPlaceFunction = async () => {\r\n        try {\r\n            const data = await axios\r\n                .get(`https://stormy-escarpment-89406.herokuapp.com/places/byCity?city_name=${match.params.cityName}`)\r\n                .then(response => {\r\n                    setPlaces(response.data);\r\n                })\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getPlaceFunction();\r\n    }, [])\r\n    /* useEffect( () => {\r\n         axios.get(`https://stormy-escarpment-89406.herokuapp.com/places/byCity?city_name=${match.params.cityName}`)\r\n             .then(response => {\r\n                 setPlaces(response.data);\r\n             })\r\n     }, []);*/\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        {places && places.map((place, index) =>\r\n                            <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                <Link to={`${URL}/${place.placeName}`} className={classes.link}>\r\n\r\n                                    <Card className={classes.root}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                alt={place.placeName}\r\n                                                height=\"140\"\r\n                                                image={place.placePhoto}\r\n                                                title={place.placeName}\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                    {place.placeName}\r\n                                                </Typography>\r\n\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n\r\n                                    </Card>\r\n                                </Link>\r\n                            </Grid>)}\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress className={classes.loader}/>\r\n                    </Grid>}\r\n        </div>\r\n    );\r\n};\r\nexport default PlacesByCity;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport axios from \"axios\"\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: 10,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n        color: \"white\",\r\n    },\r\n    titleBar: {\r\n        background:\r\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n}));\r\n\r\n\r\nconst PlaceDescription = (props) => {\r\n    const match = useRouteMatch('/placeDescription/:placeName');\r\n\r\n    const [placeDescription, setPlaceDescription] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getPlaceDescription = async() => {\r\n        try {\r\n            const data = await axios\r\n                .get(`https://stormy-escarpment-89406.herokuapp.com/placeDescription?place_name=${match.params.placeName}`)\r\n                .then(response => {\r\n                    setPlaceDescription(response.data);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log('No place description');\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlaceDescription();\r\n    }, []);\r\n   /* useEffect(() => {\r\n        axios.get(`https://stormy-escarpment-89406.herokuapp.com/placeDescription?place_name=${match.params.placeName}`)\r\n            .then(response => {\r\n                setPlaceDescription(response.data);\r\n            })\r\n    }, []);*/\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n                spacing={5}\r\n            >\r\n                <Grid item xs={12} md={12} lg={12}>\r\n                    <Card className={classes.root}>\r\n                        <CardActionArea>\r\n                            <GridList className={classes.gridList} cols={2.5}>\r\n\r\n                                {\r\n                                    placeDescription && placeDescription.placePhotos && placeDescription.placePhotos.split(',').map((url, index) =>\r\n\r\n                                        <GridListTile>\r\n                                            <img src={url} alt={match.params.placeName}/>\r\n                                            <GridListTileBar\r\n                                                title={match.params.placeName}\r\n                                                classes={{\r\n                                                    root: classes.titleBar,\r\n                                                    title: classes.title,\r\n                                                }}\r\n                                            />\r\n                                        </GridListTile>\r\n                                    )\r\n                                }\r\n                            </GridList>\r\n\r\n\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {match.params.placeName}\r\n                                </Typography>\r\n                                <Typography>\r\n                                    {placeDescription.placeDescription}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress className={classes.loader} />\r\n                    </Grid>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default PlaceDescription;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {Link, useRouteMatch} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport clsx from 'clsx';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport EmojiPeopleOutlinedIcon from '@material-ui/icons/EmojiPeopleOutlined';\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { green } from '@material-ui/core/colors';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: 10,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 250,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\n\r\nconst GroupDescription = (props) => {\r\n\r\n    const match = useRouteMatch('/groupDescription/:groupName');\r\n\r\n    const [groupDescription, setGroupDescription] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [joined, setJoined] = useState(false);\r\n\r\n    const getGroupDescription = async () => {\r\n        const data = await axios\r\n            .get(`https://stormy-escarpment-89406.herokuapp.com/groups/getGroup?group_name=${match.params.groupName}`)\r\n            .then(response => {\r\n                setGroupDescription(response.data);\r\n                for (let i = 0; i < response.data.members.length; i++) {\r\n                    let data = response.data.members[i].phoneNumber;\r\n                    if (data === localStorage.getItem('phoneNum').split('%2B').join('+')) {\r\n                        setJoined(true);\r\n                        break;\r\n                    }\r\n                }\r\n                console.log(joined);\r\n            })\r\n        setLoading(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGroupDescription();\r\n    }, []);\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const USER_TOKEN = localStorage.getItem('token').split('\"').join('');\r\n\r\n    const leaveGroup = async () => {\r\n        try {\r\n            const data = await axios.post(`https://stormy-escarpment-89406.herokuapp.com/groups/leaveGroup?group_name=${match.params.groupName}`,\r\n                USER_TOKEN, {headers: {'Authorization': `${USER_TOKEN}`}}\r\n            )\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    const joinGroup = async () => {\r\n        try {\r\n            const data = await axios.post(`https://stormy-escarpment-89406.herokuapp.com/groups/joinGroup?group_name=${match.params.groupName}`,\r\n                USER_TOKEN, {headers: {'Authorization': `${USER_TOKEN}`}}\r\n            )\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const handleJoinGroup = () => {\r\n        setOpenS(true);\r\n        console.log(USER_TOKEN);\r\n        joinGroup();\r\n    };\r\n    const handleLeaveGroup = () => {\r\n        setOpenL(true);\r\n        console.log(USER_TOKEN);\r\n        leaveGroup();\r\n    };\r\n    const [openS, setOpenS] = React.useState(false);\r\n    const [openL, setOpenL] = React.useState(false);\r\n\r\n    const handleClickS = () => {\r\n        setOpenS(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenS(false);\r\n        setOpenL(false);\r\n    };\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <Card className={classes.root}>\r\n                                <CardHeader\r\n                                    title={groupDescription.groupName}\r\n                                    subheader={`Количество походов: ${groupDescription.numberOfHikes}`}\r\n                                />\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={groupDescription.groupPhoto}\r\n                                    title={groupDescription.groupName}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {groupDescription.groupDescription}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        <a style={{color: \"grey\"}}\r\n                                           href={`https://${groupDescription.groupLinks}`}>Instagram</a>\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {/*<a style={{color: \"grey\"}} href={`https://wa.me/${groupDescription.admins[0].split('+').join('')}`}>Связь с администратором</a>*/}\r\n                                        Админ: {groupDescription.admins[0]}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions disableSpacing>\r\n                                    {/*<IconButton aria-label=\"add to favorites\">*/}\r\n                                    {/*    <FavoriteIcon/>*/}\r\n                                    {/*</IconButton>*/}\r\n\r\n\r\n                                    {\r\n                                        joined ? <IconButton aria-label=\"leave\">\r\n                                                <ExitToAppIcon onClick={handleLeaveGroup}/>\r\n                                            </IconButton>\r\n                                            :\r\n                                            <IconButton aria-label=\"join\">\r\n                                                <AddCircleIcon onClick={handleJoinGroup}/>\r\n                                            </IconButton>\r\n                                    }\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                    <CardContent>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel1a-content\"\r\n                                                id=\"panel1a-header\"\r\n                                            >\r\n                                                <EmojiPeopleOutlinedIcon style={{ color: green[500] }}/>\r\n                                                <Typography className={classes.heading}> Участники</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <List divider>\r\n                                                    {groupDescription && groupDescription.members && groupDescription.members\r\n                                                        .map((member, index) =>\r\n\r\n                                                            <ListItem divider alignItems=\"flex-start\">\r\n                                                                <ListItemAvatar>\r\n                                                                    <Avatar alt={member.name} src={member.photo}/>\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText\r\n                                                                    primary={member.name + \" \" + member.surname}\r\n                                                                    secondary={member.phoneNumber}/>\r\n                                                            </ListItem>\r\n                                                        )}\r\n                                                </List>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel2a-content\"\r\n                                                id=\"panel2a-header\"\r\n                                            >\r\n                                                <DirectionsWalkIcon style={{ color: green[500] }}/>\r\n                                                <Typography className={classes.heading}> История походов</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <Grid\r\n                                                    container\r\n                                                    direction=\"row\"\r\n                                                    justify=\"center\"\r\n                                                    alignItems=\"flex-start\"\r\n                                                    spacing={5}\r\n                                                >\r\n                                                    {groupDescription && groupDescription.hikesHistory && groupDescription.hikesHistory.map((hike, index) =>\r\n\r\n                                                        <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                                            <Card>\r\n                                                                <CardActionArea>\r\n                                                                    <CardMedia\r\n                                                                        component=\"img\"\r\n                                                                        alt=\"Contemplative Reptile\"\r\n                                                                        height=\"140\"\r\n                                                                        image={hike.hikePhoto}\r\n                                                                        title=\"Contemplative Reptile\"\r\n                                                                    />\r\n                                                                    <CardContent>\r\n                                                                        <Typography gutterBottom variant=\"h5\"\r\n                                                                                    component=\"h2\">\r\n                                                                            {hike.placeName}\r\n                                                                        </Typography>\r\n                                                                        <Typography variant=\"body2\"\r\n                                                                                    color=\"textSecondary\" component=\"p\">\r\n                                                                            {hike.startDate + \" - \" + hike.endDate}\r\n                                                                        </Typography>\r\n                                                                    </CardContent>\r\n                                                                </CardActionArea>\r\n                                                                <CardActions>\r\n                                                                    <Link to={`/hikeDescription/${hike.hikeId}`}\r\n                                                                          className={classes.link}>\r\n                                                                        <Button variant=\"contained\" color=\"primary\"\r\n                                                                                size=\"small\">\r\n                                                                            Выбрать\r\n                                                                        </Button>\r\n                                                                    </Link>\r\n                                                                </CardActions>\r\n                                                            </Card>\r\n\r\n\r\n\r\n                                                    </Grid>\r\n                                                    )}\r\n                                                </Grid>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n\r\n                                    </CardContent>\r\n                                </Collapse>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n            }\r\n            <Snackbar open={openS} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    Вы вступили в группу!\r\n                </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={openL} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"warning\">\r\n                    Вы покинули группу!\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n};\r\nexport default GroupDescription;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/groupDescription\";\r\n\r\nconst Groups = (props) => {\r\n    const [groupsByUser, setGroupsByUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const USER_TOKEN = localStorage.getItem('token').split('\"').join('');\r\n    const getGroupsByUser = async () => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/groups/getByUser\",\r\n                // { crossdomain: true },\r\n                {headers: {'Authorization': USER_TOKEN}},\r\n            )\r\n                .then(response => {\r\n                    setGroupsByUser(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGroupsByUser()\r\n    }, []);\r\n\r\n\r\n    const classes = useStyles();\r\n    if (!(groupsByUser)) {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    loading ?\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            <Typography variant='h6'>Вы не состоите в группах</Typography>\r\n                        </Grid>\r\n                        :\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            <CircularProgress/>\r\n                        </Grid>\r\n                }\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    loading ?\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            {groupsByUser && groupsByUser.map((group, index) =>\r\n                                <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                    <Link to={`${URL}/${group.groupName}`} className={classes.link}>\r\n\r\n                                        <Card className={classes.root}>\r\n                                            <CardActionArea>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt=\"Contemplative Reptile\"\r\n                                                    height=\"140\"\r\n                                                    image={group.groupPhoto}\r\n                                                    title=\"Contemplative Reptile\"\r\n                                                />\r\n                                                <CardContent>\r\n                                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                        {group.groupName}\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                        Количество участников: {group.numberOfMembers}\r\n                                                        <Divider/>\r\n                                                        Совершено походов: {group.numberOfHikes}\r\n                                                    </Typography>\r\n\r\n                                                </CardContent>\r\n                                            </CardActionArea>\r\n                                        </Card>\r\n                                    </Link>\r\n\r\n                                </Grid>)}\r\n                        </Grid>\r\n                        :\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            <CircularProgress/>\r\n                        </Grid>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\nexport default Groups;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {Link, useRouteMatch} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport clsx from 'clsx';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport EmojiPeopleOutlinedIcon from '@material-ui/icons/EmojiPeopleOutlined';\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {green} from '@material-ui/core/colors';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport DriveEtaIcon from '@material-ui/icons/DriveEta';\r\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: 10,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 250,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    },\r\n    secondaryHeading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\n\r\nconst HikeDescription = (props) => {\r\n\r\n    const match = useRouteMatch('/hikeDescription/:hikeId');\r\n\r\n    const [hikeDescription, setHikeDescription] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [joined, setJoined] = useState(false);\r\n    const USER_TOKEN = localStorage.getItem('token').split('\"').join('');\r\n\r\n\r\n    const getHikeDescription = async () => {\r\n        const data = await axios\r\n            .get(`https://stormy-escarpment-89406.herokuapp.com/hikes/getHike?hike_id=${match.params.hikeId}`)\r\n            .then(response => {\r\n                setHikeDescription(response.data);\r\n                for (let i = 0; i < response.data.members.length; i++) {\r\n                    let data = response.data.members[i].phoneNumber;\r\n                    if (data === localStorage.getItem('phoneNum').split('%2B').join('+')) {\r\n                        setJoined(true);\r\n                        break;\r\n                    }\r\n                }\r\n            })\r\n        setLoading(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getHikeDescription();\r\n    }, []);\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n\r\n    const leaveHike = async () => {\r\n        try {\r\n            const data = await axios.post(`https://stormy-escarpment-89406.herokuapp.com/hikes/leaveHike?hike_id=${match.params.hikeId}`,\r\n                USER_TOKEN, {headers: {'Authorization': `${USER_TOKEN}`}}\r\n            )\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    const joinHike = async () => {\r\n        try {\r\n            const data = await axios.post(`https://stormy-escarpment-89406.herokuapp.com/hikes/joinHike?hike_id=${match.params.hikeId}`,\r\n                USER_TOKEN, {headers: {'Authorization': `${USER_TOKEN}`}}\r\n            )\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const handleJoinHike = () => {\r\n        setOpenS(true);\r\n        console.log(USER_TOKEN);\r\n        joinHike();\r\n    };\r\n    const handleLeaveHike = () => {\r\n        setOpenL(true);\r\n        console.log(USER_TOKEN);\r\n        leaveHike();\r\n    };\r\n    const [openS, setOpenS] = React.useState(false);\r\n    const [openL, setOpenL] = React.useState(false);\r\n\r\n    const handleClickS = () => {\r\n        setOpenS(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpenS(false);\r\n        setOpenL(false);\r\n    };\r\n\r\n    function Alert(props) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <Card className={classes.root}>\r\n                                <CardHeader\r\n                                    title={`Поход на ${hikeDescription.placeName}`}\r\n                                    subheader={`Организатор: ${hikeDescription.groupName}`}\r\n                                />\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={hikeDescription.hikePhoto}\r\n                                    title={hikeDescription.hikeName}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {hikeDescription.hikeDescription}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {/*<a style={{color: \"grey\"}} href={`https://wa.me/${groupDescription.admins[0].split('+').join('')}`}>Связь с администратором</a>*/}\r\n                                        Админ: {hikeDescription.admins[0]}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions disableSpacing>\r\n                                    {/*<IconButton aria-label=\"add to favorites\">*/}\r\n                                    {/*    <FavoriteIcon/>*/}\r\n                                    {/*</IconButton>*/}\r\n\r\n                                    <Link to={`/placeDescription/${hikeDescription.placeName}`}>\r\n                                        <IconButton aria-label=\"about place\">\r\n                                            <InfoIcon/>\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                    {\r\n                                        joined ? <IconButton aria-label=\"leave\">\r\n                                                <ExitToAppIcon onClick={handleLeaveHike}/>\r\n                                            </IconButton>\r\n                                            :\r\n                                            <IconButton aria-label=\"join\">\r\n                                                <AddCircleIcon onClick={handleJoinHike}/>\r\n                                            </IconButton>\r\n                                    }\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                    <CardContent>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel1a-content\"\r\n                                                id=\"panel1a-header\"\r\n                                            >\r\n                                                <EmojiPeopleOutlinedIcon style={{color: green[500]}}/>\r\n                                                <Typography className={classes.heading}> Участники</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <List divider>\r\n                                                    {hikeDescription && hikeDescription.members && hikeDescription.members\r\n                                                        .map((member, index) =>\r\n\r\n                                                            <ListItem divider alignItems=\"flex-start\">\r\n                                                                <ListItemAvatar>\r\n                                                                    <Avatar alt={member.name} src={member.photo}/>\r\n                                                                </ListItemAvatar>\r\n                                                                <ListItemText\r\n                                                                    primary={member.name + \" \" + member.surname}\r\n                                                                    secondary={member.phoneNumber}/>\r\n                                                            </ListItem>\r\n                                                        )}\r\n                                                </List>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n                                        <ExpansionPanel>\r\n                                            <ExpansionPanelSummary\r\n                                                expandIcon={<ExpandMoreIcon/>}\r\n                                                aria-controls=\"panel2a-content\"\r\n                                                id=\"panel2a-header\"\r\n                                            >\r\n                                                <HelpIcon style={{color: green[500]}}/>\r\n                                                <Typography className={classes.heading}> Полезная\r\n                                                    информация</Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <List divider>\r\n                                                    <ListItem divider alignItems=\"flex-start\">\r\n                                                        <ListItemAvatar>\r\n                                                            <AccessTimeIcon/>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary=\"Дата и время сбора\"\r\n                                                            secondary={hikeDescription.startDate+\", \"+hikeDescription.startTime + \" - \" + hikeDescription.endDate + \", \" + hikeDescription.endTime}/>\r\n                                                    </ListItem>\r\n                                                    <ListItem divider alignItems=\"flex-start\">\r\n                                                        <ListItemAvatar>\r\n                                                            <DirectionsIcon/>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary=\"Место сбора\"\r\n                                                            secondary={hikeDescription.gatheringPlace}/>\r\n                                                    </ListItem>\r\n                                                    <ListItem divider alignItems=\"flex-start\">\r\n                                                        <ListItemAvatar>\r\n                                                            <DriveEtaIcon/>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary=\"Поедем на машине?\"\r\n                                                            secondary={hikeDescription.hikeByCar ? 'Да' : 'Нет'}/>\r\n                                                    </ListItem>\r\n                                                    <ListItem divider alignItems=\"flex-start\">\r\n                                                        <ListItemAvatar>\r\n                                                            <NightsStayIcon/>\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary=\"С ночевкой?\"\r\n                                                            secondary={hikeDescription.withOvernightStay ? 'Да' : 'Нет'}/>\r\n                                                    </ListItem>\r\n                                                </List>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n\r\n                                    </CardContent>\r\n                                </Collapse>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n            }\r\n            <Snackbar open={openS} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                    Вы стали участником похода.\r\n                </Alert>\r\n            </Snackbar>\r\n            <Snackbar open={openL} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"warning\">\r\n                    Вы больше не участник похода.\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n};\r\nexport default HikeDescription;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/hikeDescription\";\r\n\r\nconst Groups = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const [upcomingHikesByUser, setUpcomingHikesByUser] = useState([]);\r\n    const [pastHikesByUser, setPastHikesByUser] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const USER_TOKEN = localStorage.getItem('token').split('\"').join('');\r\n    const getUpcomingHikesByUser = async () => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/hikes/getUpcomingByUser\",\r\n                {headers: {Authorization: USER_TOKEN}}\r\n            )\r\n                .then(response => {\r\n                    setUpcomingHikesByUser(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            setLoading(true);\r\n            console.log(e);\r\n        }\r\n    }\r\n    const getPastHikesByUser = async () => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/hikes/getPastByUser\",\r\n                {headers: {Authorization: USER_TOKEN}}\r\n            )\r\n                .then(response => {\r\n                    setPastHikesByUser(response.data);\r\n                });\r\n            setLoading(true);\r\n\r\n        } catch (e) {\r\n            setLoading(true);\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUpcomingHikesByUser();\r\n        getPastHikesByUser()\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                loading ?\r\n                    <TabContext value={value}>\r\n                        <AppBar position=\"static\">\r\n                            <TabList onChange={handleChange} aria-label=\"simple tabs example\">\r\n                                <Tab label=\"Предстоящие\" value=\"1\"/>\r\n                                <Tab label=\"Прошлые\" value=\"2\"/>\r\n                            </TabList>\r\n                        </AppBar>\r\n                        <TabPanel value=\"1\">\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"flex-start\"\r\n                                spacing={5}\r\n                            >\r\n                                {upcomingHikesByUser && upcomingHikesByUser.map((hike, index) =>\r\n                                    <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                        <Link to={`${URL}/${hike.hikeId}`} className={classes.link}>\r\n\r\n                                            <Card className={classes.root}>\r\n                                                <CardActionArea>\r\n                                                    <CardMedia\r\n                                                        component=\"img\"\r\n                                                        alt=\"Contemplative Reptile\"\r\n                                                        height=\"140\"\r\n                                                        image={hike.hikePhoto}\r\n                                                        title=\"Contemplative Reptile\"\r\n                                                    />\r\n                                                    <CardContent>\r\n                                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                            {hike.placeName}\r\n                                                        </Typography>\r\n\r\n                                                    </CardContent>\r\n                                                </CardActionArea>\r\n                                            </Card>\r\n                                        </Link>\r\n\r\n                                    </Grid>)}\r\n                            </Grid>\r\n                        </TabPanel>\r\n                        <TabPanel value=\"2\">\r\n                            <Grid\r\n                                container\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                alignItems=\"flex-start\"\r\n                                spacing={5}\r\n                            >\r\n                                {pastHikesByUser && pastHikesByUser.map((hike, index) =>\r\n                                    <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                        <Card className={classes.root}>\r\n                                            <CardActionArea>\r\n                                                <CardMedia\r\n                                                    component=\"img\"\r\n                                                    alt=\"Contemplative Reptile\"\r\n                                                    height=\"140\"\r\n                                                    image={hike.groupPhoto}\r\n                                                    title=\"Contemplative Reptile\"\r\n                                                />\r\n                                                <CardContent>\r\n                                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                        {hike.placeName}\r\n                                                    </Typography>\r\n\r\n                                                </CardContent>\r\n                                            </CardActionArea>\r\n                                            <CardActions>\r\n                                                <Link to={`${URL}/${hike.hikeId}`} className={classes.link}>\r\n                                                    <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n                                                        Выбрать\r\n                                                    </Button>\r\n                                                </Link>\r\n                                            </CardActions>\r\n                                        </Card>\r\n                                    </Grid>)}\r\n                            </Grid>\r\n                        </TabPanel>\r\n                    </TabContext>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n            }\r\n        </div>\r\n    );\r\n\r\n\r\n};\r\nexport default Groups;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000',\r\n    },\r\n}));\r\n\r\nconst MainPage = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n                spacing={5}\r\n            >\r\n                <Grid className={classes.grid}>\r\n                    <Typography variant=\"h6\">\r\n                        {props.name ? \"Добро пожаловать: \" + props.name + ' ' + props.surname : 'Вы не авторизованы'}\r\n                    </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default MainPage;","import React, {useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport {mainListItems} from './listItems';\r\nimport {Route, useRouteMatch} from \"react-router-dom\"\r\nimport Places from \"./Places\";\r\nimport Groups from \"./Groups\";\r\nimport Hikes from \"./Hikes\";\r\nimport PlacesByCity from \"./PlacesByCity\";\r\nimport PlaceDescription from \"./PlaceDescription\";\r\nimport GroupDescription from \"./GroupDescription\";\r\nimport GroupsByUser from \"./GroupsByUser\";\r\nimport HikeDescription from \"./HikeDescription\";\r\nimport HikesByUser from \"./HikesByUser\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport MainPage from \"./MainPage\";\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://www.bcompanion.kz/\">\r\n                BCompanion\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    nested: {\r\n        paddingLeft: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    const [userInfo, setUserInfo] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getUserInfo = async () => {\r\n        try {\r\n            const data = await axios.get(`https://stormy-escarpment-89406.herokuapp.com/users/getUser?phone_number=${localStorage.getItem('phoneNum')}`\r\n            )\r\n            .then(response => {\r\n                setUserInfo(response.data);\r\n            });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem('phoneNum')=== null){\r\n            console.log('phone num doesnt exist');\r\n        } else {\r\n            getUserInfo();\r\n        }\r\n    }, []);\r\n\r\n    function logOut() {\r\n        localStorage.clear();\r\n        setUserInfo(null);\r\n        window.location.href='https://www.kazatk.kz/myrzabek/bcompanion/index.html?logOut=true';\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const [openM, setOpenM] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpenM(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpenM(false);\r\n    };\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar style={{background: '#6DC068'}} position=\"absolute\"\r\n                    className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        BCompanion\r\n                    </Typography>\r\n                    { loading ?\r\n                    <div>\r\n\r\n\r\n                        <Avatar onClick={handleOpen} alt=\"Avatar\"\r\n                                src=\"https://i.ibb.co/VqncVzX/avatar.png\"/>\r\n                        <Modal\r\n                            aria-labelledby=\"transition-modal-title\"\r\n                            aria-describedby=\"transition-modal-description\"\r\n                            className={classes.modal}\r\n                            open={openM}\r\n                            onClose={handleClose}\r\n                            closeAfterTransition\r\n                            BackdropComponent={Backdrop}\r\n                            BackdropProps={{\r\n                                timeout: 500,\r\n                            }}\r\n                        >\r\n                            <Fade in={openM}>\r\n                                <div className={classes.paper}>\r\n                                    <h2 id=\"transition-modal-title\">{userInfo ? userInfo.name : <a href='https://www.kazatk.kz/myrzabek/bcompanion/index.html?logOut=true'>Login</a>} {userInfo ? userInfo.surname : ''}</h2>\r\n                                    <p id=\"transition-modal-description\">{userInfo ? userInfo.phoneNumber : ''}</p>\r\n                                    {userInfo ? <Button onClick={logOut} variant='contained' color='secondary'>\r\n                                        Выйти\r\n                                    </Button> : ''}\r\n                                </div>\r\n                            </Fade>\r\n                        </Modal>\r\n\r\n                    </div>\r\n                            :\r\n                            <CircularProgress/>\r\n                            }\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>{mainListItems}</List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        {/* Chart */}\r\n                        <Grid item xs={12} md={8} lg={12}>\r\n                            <Paper>\r\n                                {loading ?\r\n                                    <Route path='/' exact render={() => <MainPage name={ userInfo ? userInfo.name : ''} surname = {userInfo ?userInfo.surname: ''}/>}/>\r\n                                    :\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"center\"\r\n                                        alignItems=\"flex-start\"\r\n                                        spacing={5}\r\n                                    >\r\n                                        <CircularProgress/>\r\n                                    </Grid>\r\n                                }\r\n                                <Route path='/places' exact render={() => <Places/>}/>\r\n                                <Route path='/places/:cityName'\r\n                                       render={() => <PlacesByCity/>}/>\r\n                                <Route path='/groups' exact render={() => <Groups/>}/>\r\n                                <Route path='/groupsByUser' userToken={props.userToken} exact\r\n                                       render={() => <GroupsByUser/>}/>\r\n                                <Route path='/groupDescription/:groupName'\r\n                                       render={() => <GroupDescription/>}/>\r\n                                <Route path='/hikes' render={() => <Hikes/>}/>\r\n\r\n                                <Route path='/placeDescription/:placeName'\r\n                                       render={() => <PlaceDescription/>}/>\r\n                                <Route path='/hikeDescription/:hikeId'\r\n                                       render={() => <HikeDescription/>}/>\r\n                                <Route path='/hikesByUser'\r\n                                       render={() => <HikesByUser/>}/>\r\n\r\n                                {/*\r\n                                <Redirect from='/' to='/places'/>\r\n*/}\r\n\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright/>\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Dashboard from \"./components/Dashboard\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction App() {\n    let url = window.location.href;\n    let params = (new URL(url)).searchParams;\n    let userPhoneNum = encodeURIComponent(params.get('phoneNum'));\n    if (userPhoneNum === null){\n\n    } else {\n        localStorage.setItem('phoneNum', userPhoneNum);\n    }\n    const [userToken, setUserToken] = useState(null);\n\n    const getUserToken = async () => {\n        try {\n            if (!(userPhoneNum)){\n                console.log(\"userPhoneNum is null\");\n            } else if (userPhoneNum) {\n                if (localStorage.getItem('token') === null || localStorage.getItem('phoneNum') === null) {\n\n                    const data = await axios\n                        .get(`https://stormy-escarpment-89406.herokuapp.com/users/getToken?phone_number=${localStorage.getItem('phoneNum')}`)\n                        .then(response => {\n                            localStorage.setItem('token', JSON.stringify(response.data));\n                            localStorage.setItem('phoneNum', userPhoneNum);\n                        })\n                        .catch(function (error) {\n                            console.log('No such user! Error in getting token!');\n                        });\n                } else if ((localStorage.getItem('phoneNum')) && localStorage.getItem('phoneNum') !== userPhoneNum){\n                    localStorage.clear();\n                    const data = await axios\n                        .get(`https://stormy-escarpment-89406.herokuapp.com/users/getToken?phone_number=${localStorage.getItem('phoneNum')}`)\n                        .then(response => {\n                            localStorage.setItem('token', JSON.stringify(response.data));\n                            localStorage.setItem('phoneNum', userPhoneNum);\n                        })\n                        .catch(function (error) {\n                            console.log('No such user! Error in getting token!');\n                        });\n                }\n            }\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    const [groupsByUser, setGroupsByUser] = useState([]);\n\n\n\n    useEffect(() => {\n        getUserToken();\n        console.log(\"User is logged in: \" + localStorage.getItem('token'));\n    }, userToken, groupsByUser);\n\n    return (\n        <BrowserRouter>\n            <div>\n                <Dashboard/>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}