{"version":3,"sources":["components/listItems.js","components/Places.js","components/Groups.js","components/Hikes.js","components/PlacesByCity.js","components/PlaceDescription.js","components/GroupDescription.js","components/GroupsByUser.js","components/HikeDescription.js","components/HikesByUser.js","components/MainPage.js","components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["mainListItems","to","style","textDecoration","color","activeStyle","ListItem","button","ListItemIcon","ListItemText","primary","href","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","palette","text","secondary","media","height","grid","link","Places","props","useState","cities","setCities","loading","setLoading","getPlacesFunction","a","axios","get","then","response","data","console","log","useEffect","classes","Grid","container","direction","justify","alignItems","map","city","index","className","item","xs","md","lg","Card","CardActionArea","CardMedia","component","alt","image","cityPhoto","title","CardContent","Typography","gutterBottom","variant","cityName","CardActions","Button","size","CircularProgress","loader","Groups","groups","setGroups","getGroups","group","groupPhoto","groupName","Hikes","hikes","setHikes","getHikes","hike","placeName","hikeId","PlacesByCity","match","useRouteMatch","params","places","setPlaces","getPlaceFunction","place","placePhoto","margin","gridList","flexWrap","transform","titleBar","background","PlaceDescription","placeDescription","setPlaceDescription","getPlaceDescription","catch","error","GridList","cols","placePhotos","split","url","GridListTile","src","GridListTileBar","GroupDescription","groupDescription","setGroupDescription","getGroupDescription","React","expanded","setExpanded","USER_TOKEN","localStorage","getItem","join","joinGroup","post","headers","CardHeader","subheader","numberOfHikes","disableSpacing","IconButton","aria-label","onClick","alert","clsx","expand","expandOpen","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","members","member","name","surname","groupsByUser","setGroupsByUser","getGroupsByUser","Authorization","numberOfMembers","Divider","HikeDescription","hikeDescription","setHikeDescription","getHikeDescription","backgroundColor","value","setValue","upcomingHikesByUser","setUpcomingHikesByUser","pastHikesByUser","setPastHikesByUser","getUpcomingHikesByUser","getPastHikesByUser","TabContext","AppBar","position","TabList","onChange","event","newValue","Tab","label","TabPanel","MainPage","Copyright","align","Link","Date","getFullYear","display","toolbar","paddingRight","toolbarIcon","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","modal","border","boxShadow","shadows","Dashboard","userInfo","setUserInfo","getUserInfo","openM","setOpenM","open","setOpen","CssBaseline","Toolbar","edge","noWrap","Avatar","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","id","phoneNumber","clear","window","location","Drawer","List","Container","maxWidth","Paper","path","exact","render","userToken","GroupsByUser","HikesByUser","Box","pt","App","URL","searchParams","userPhoneNum","encodeURIComponent","setItem","getUserToken","JSON","stringify","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.64c4f7e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\r\nimport FilterHdrIcon from '@material-ui/icons/FilterHdr';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nexport const mainListItems = (\r\n    <div>\r\n        <NavLink to=\"/places\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button >\r\n                <ListItemIcon>\r\n                    <DashboardIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Места\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/groupsByUser\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <SupervisedUserCircleIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Мои группы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/groups\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <PeopleIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Все группы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/hikesByUser\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <FilterHdrIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Мои походы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <NavLink to=\"/hikes\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <MapIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\" Все походы\"/>\r\n            </ListItem>\r\n        </NavLink>\r\n        <a href=\"https://www.kazatk.kz/myrzabek/support.html\" style={{ textDecoration: 'none', color: 'black' }} activeStyle={{color: '#6DC068'}}>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <HelpIcon/>\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Поддержка\"/>\r\n            </ListItem>\r\n        </a>\r\n\r\n    </div>\r\n);\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000',\r\n    },\r\n}));\r\n\r\nconst URL = \"/places\";\r\n\r\nconst Places = (props) => {\r\n\r\n    const [cities, setCities] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getPlacesFunction = async () => {\r\n        try {\r\n            const data = await axios\r\n                .get(\"https://stormy-escarpment-89406.herokuapp.com/cities\")\r\n                .then(response => {\r\n                    setCities(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getPlacesFunction();\r\n    }, [])\r\n\r\n    /*useEffect( () => {\r\n        axios.get(\"https://stormy-escarpment-89406.herokuapp.com/cities\")\r\n            .then(response => {\r\n                setCities(response.data);\r\n            })\r\n    }, []);*/\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div>\r\n            {loading ?\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"flex-start\"\r\n                    spacing={5}\r\n                >\r\n                    {cities && cities.map((city, index) =>\r\n                        <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                            <Card className={classes.root}>\r\n                                <CardActionArea>\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image={city.cityPhoto}\r\n                                        title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            {city.cityName}\r\n                                        </Typography>\r\n\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                                <CardActions>\r\n                                    <Link to={`${URL}/${city.cityName}`} className={classes.link}>\r\n                                        <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n                                            Выбрать\r\n                                        </Button>\r\n                                    </Link>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>)}\r\n\r\n                </Grid>\r\n                :\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"flex-start\"\r\n                    spacing={5}\r\n                >\r\n                    <CircularProgress className={classes.loader} />\r\n                </Grid>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default Places;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/groupDescription\";\r\n\r\n\r\nconst Groups = (props) => {\r\n    const [groups, setGroups] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    const getGroups = async() => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/groups/getByActivity\")\r\n                .then(response => {\r\n                    setGroups(response.data);\r\n                });\r\n            setLoading(true);\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect( () => {\r\n        getGroups()\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        {groups && groups.map((group, index) =>\r\n                            <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                <Card className={classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt=\"Contemplative Reptile\"\r\n                                            height=\"140\"\r\n                                            image={group.groupPhoto}\r\n                                            title=\"Contemplative Reptile\"\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {group.groupName}\r\n                                            </Typography>\r\n                                            {/*<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Количество участников: {group.numberOfMembers}\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Совершено походов: {group.numberOfHikes}\r\n                                    </Typography>*/}\r\n\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                    <CardActions>\r\n                                        <Link to={`${URL}/${group.groupName}`} className={classes.link}>\r\n                                            <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n                                                Выбрать\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>)}\r\n\r\n                    </Grid>\r\n\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n                }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Groups;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/hikeDescription\";\r\n\r\nconst Hikes = (props) => {\r\n\r\n    const [hikes, setHikes] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getHikes = async() => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/hikes/getUpcomingAll\")\r\n                .then(response => {\r\n                    setHikes(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        getHikes()\r\n    }, []);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        {hikes && hikes.map((hike, index) =>\r\n                            <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                <Card className={classes.root}>\r\n                                    <CardActionArea>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            alt=\"Contemplative Reptile\"\r\n                                            height=\"140\"\r\n                                            image={hike.groupPhoto}\r\n                                            title=\"Contemplative Reptile\"\r\n                                        />\r\n                                        <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {hike.placeName}\r\n                                            </Typography>\r\n                                            {/*<Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Количество участников: {group.numberOfMembers}\r\n                                    </Typography>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        Совершено походов: {group.numberOfHikes}\r\n                                    </Typography>*/}\r\n\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                    <CardActions>\r\n                                        <Link to={`${URL}/${hike.hikeId}`} className={classes.link}>\r\n                                            <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n                                                Выбрать\r\n                                            </Button>\r\n                                        </Link>\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>)}\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default Hikes;","import React, { useState, useEffect } from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, NavLink, Route, useRouteMatch} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000',\r\n    }\r\n}));\r\n\r\nconst URL = \"/placeDescription\";\r\n\r\nconst PlacesByCity = (props) => {\r\n\r\n    const match = useRouteMatch('/places/:cityName');\r\n\r\n    console.log(match.params.cityName);\r\n\r\n    const [places, setPlaces] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getPlaceFunction = async() => {\r\n        try {\r\n            const data = await axios\r\n                .get(`https://stormy-escarpment-89406.herokuapp.com/places/byCity?city_name=${match.params.cityName}`)\r\n                .then(response => {\r\n                    setPlaces(response.data);\r\n                })\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getPlaceFunction();\r\n    }, [])\r\n   /* useEffect( () => {\r\n        axios.get(`https://stormy-escarpment-89406.herokuapp.com/places/byCity?city_name=${match.params.cityName}`)\r\n            .then(response => {\r\n                setPlaces(response.data);\r\n            })\r\n    }, []);*/\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n                spacing={5}\r\n            >\r\n                {places && places.map((place, index) =>\r\n                    <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                        <Card className={classes.root}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    component=\"img\"\r\n                                    alt=\"Contemplative Reptile\"\r\n                                    height=\"140\"\r\n                                    image={place.placePhoto}\r\n                                    title=\"Contemplative Reptile\"\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {place.placeName}\r\n                                    </Typography>\r\n\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                <Link to={`${URL}/${place.placeName}`} className={classes.link}>\r\n                                    <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n                                        Выбрать\r\n                                    </Button>\r\n                                </Link>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>)}\r\n\r\n            </Grid>\r\n            :\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n                spacing={5}\r\n            >\r\n                <CircularProgress className={classes.loader} />\r\n            </Grid> }\r\n        </div>\r\n  );\r\n};\r\nexport default PlacesByCity;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport PlacesByCity from \"./PlacesByCity\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: 10,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n    },\r\n    title: {\r\n        color: \"white\",\r\n    },\r\n    titleBar: {\r\n        background:\r\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n}));\r\n\r\n\r\nconst PlaceDescription = (props) => {\r\n    const match = useRouteMatch('/placeDescription/:placeName');\r\n\r\n/*\r\n    console.log(match.params.placeName);\r\n*/\r\n\r\n    const [placeDescription, setPlaceDescription] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getPlaceDescription = async() => {\r\n        try {\r\n            const data = await axios\r\n                .get(`https://stormy-escarpment-89406.herokuapp.com/placeDescription?place_name=${match.params.placeName}`)\r\n                .then(response => {\r\n                    setPlaceDescription(response.data);\r\n                })\r\n                .catch(function(error) {\r\n                    console.log('No place description');\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPlaceDescription();\r\n    }, []);\r\n   /* useEffect(() => {\r\n        axios.get(`https://stormy-escarpment-89406.herokuapp.com/placeDescription?place_name=${match.params.placeName}`)\r\n            .then(response => {\r\n                setPlaceDescription(response.data);\r\n            })\r\n    }, []);*/\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n                spacing={5}\r\n            >\r\n                <Grid item xs={12} md={12} lg={12}>\r\n                    <Card className={classes.root}>\r\n                        <CardActionArea>\r\n                            <GridList className={classes.gridList} cols={2.5}>\r\n\r\n                                {\r\n                                    placeDescription && placeDescription.placePhotos && placeDescription.placePhotos.split(',').map((url, index) =>\r\n\r\n                                        <GridListTile>\r\n                                            <img src={url} alt={match.params.placeName}/>\r\n                                            <GridListTileBar\r\n                                                title={match.params.placeName}\r\n                                                classes={{\r\n                                                    root: classes.titleBar,\r\n                                                    title: classes.title,\r\n                                                }}\r\n                                            />\r\n                                        </GridListTile>\r\n                                    )\r\n                                }\r\n                            </GridList>\r\n\r\n\r\n                            <CardContent>\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                    {match.params.placeName}\r\n                                </Typography>\r\n                                <Typography>\r\n                                    {placeDescription.placeDescription}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress className={classes.loader} />\r\n                    </Grid>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default PlaceDescription;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport clsx from 'clsx';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: 10,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 250,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    }\r\n}));\r\n\r\n\r\nconst GroupDescription = (props) => {\r\n\r\n    const match = useRouteMatch('/groupDescription/:groupName');\r\n\r\n    const [groupDescription, setGroupDescription] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getGroupDescription = async() => {\r\n        const data = await axios\r\n            .get(`https://stormy-escarpment-89406.herokuapp.com/groups/getGroup?group_name=${match.params.groupName}`)\r\n            .then(response => {\r\n                setGroupDescription(response.data);\r\n            })\r\n        setLoading(true);\r\n    }\r\n\r\n    useEffect( () => {\r\n        getGroupDescription();\r\n    }, []);\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const USER_TOKEN = localStorage.getItem('token').split('\"').join('');\r\n\r\n\r\n    const joinGroup = async () => {\r\n        try {\r\n            const data = await axios.post(`https://stormy-escarpment-89406.herokuapp.com/groups/joinGroup?group_name=${match.params.groupName}`,\r\n                USER_TOKEN, {headers: {'Authorization': `${USER_TOKEN}`}}\r\n            )\r\n                .then(response => {\r\n                    console.log(response.data);\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const handleJoinGroup = () => {\r\n        alert('joining to group: ' + match.params.groupName);\r\n        console.log(USER_TOKEN);\r\n        joinGroup();\r\n    };\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <Card className={classes.root}>\r\n                                <CardHeader\r\n                                    title={groupDescription.groupName}\r\n                                    subheader={`Количество походов: ${groupDescription.numberOfHikes}`}\r\n                                />\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={groupDescription.groupPhoto}\r\n                                    title={groupDescription.groupName}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {groupDescription.groupDescription}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions disableSpacing>\r\n                                    <IconButton aria-label=\"add to favorites\">\r\n                                        <FavoriteIcon/>\r\n                                    </IconButton>\r\n                                    <IconButton aria-label=\"share\">\r\n                                        <AddCircleIcon onClick = {handleJoinGroup} />\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                    <CardContent>\r\n\r\n\r\n                                        <Typography paragraph>\r\n                                            Участники:\r\n                                            {groupDescription && groupDescription.members && groupDescription.members.map((member, index) =>\r\n                                                <Typography>\r\n                                                    {member.name} {member.surname}\r\n                                                </Typography>\r\n                                            )}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Collapse>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n                    }\r\n        </div>\r\n    );\r\n};\r\nexport default GroupDescription;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/groupDescription\";\r\n\r\nconst Groups = (props) => {\r\n    const [groupsByUser, setGroupsByUser] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const USER_TOKEN = localStorage.getItem('token').split('\"').join('');\r\n    const getGroupsByUser = async () => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/groups/getByUser\",\r\n                {headers: {Authorization: USER_TOKEN}}\r\n                )\r\n                .then(response => {\r\n                    setGroupsByUser(response.data);\r\n                    alert(\"Success!\");\r\n                });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            alert(\"Error: \" + e);\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGroupsByUser()\r\n    }, []);\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    if (!(groupsByUser)){\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    loading ?\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                                    <Typography variant='h5'>Вы не состоите в группах</Typography>\r\n                        </Grid>\r\n                        :\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            <CircularProgress/>\r\n                        </Grid>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    loading ?\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            {groupsByUser && groupsByUser.map((group, index) =>\r\n                                <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                    <Card className={classes.root}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                component=\"img\"\r\n                                                alt=\"Contemplative Reptile\"\r\n                                                height=\"140\"\r\n                                                image={group.groupPhoto}\r\n                                                title=\"Contemplative Reptile\"\r\n                                            />\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                    {group.groupName}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                    Количество участников: {group.numberOfMembers}\r\n                                                    <Divider />\r\n                                                    Совершено походов: {group.numberOfHikes}\r\n                                                </Typography>\r\n\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n                                        <CardActions>\r\n                                            <Link to={`${URL}/${group.groupName}`} className={classes.link}>\r\n                                                <Button variant=\"contained\" size=\"small\" color=\"primary\">\r\n                                                    Показать\r\n                                                </Button>\r\n                                            </Link>\r\n\r\n                                        </CardActions>\r\n                                    </Card>\r\n                                </Grid>)}\r\n                        </Grid>\r\n                        :\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            <CircularProgress/>\r\n                        </Grid>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\nexport default Groups;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport clsx from 'clsx';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        margin: 10,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 250,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n    }\r\n}));\r\n\r\n\r\nconst HikeDescription = (props) => {\r\n\r\n    const match = useRouteMatch('/hikeDescription/:hikeId');\r\n\r\n    const [hikeDescription, setHikeDescription] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getHikeDescription = async () => {\r\n        const data = await axios\r\n            .get(`https://stormy-escarpment-89406.herokuapp.com/hikes/getHike?hike_id=${match.params.hikeId}`)\r\n            .then(response => {\r\n                setHikeDescription(response.data);\r\n            })\r\n        setLoading(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getHikeDescription();\r\n    }, []);\r\n    const classes = useStyles();\r\n\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n    return (\r\n\r\n        <div>\r\n            {\r\n                loading ?\r\n\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <Grid item xs={12} md={12} lg={12}>\r\n                            <Card className={classes.root}>\r\n                                <CardHeader\r\n                                    title={`Поход на ${hikeDescription.placeName}`}\r\n                                    subheader={`Организатор: ${hikeDescription.groupName}`}\r\n                                />\r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    image={hikeDescription.groupPhoto}\r\n                                    title={hikeDescription.groupName}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {hikeDescription.hikeDescription}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions disableSpacing>\r\n                                    <Link to={`/placeDescription/${hikeDescription.placeName}`}>\r\n                                        <IconButton aria-label=\"about place\">\r\n                                            <InfoIcon color='primary'/>\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                    <IconButton aria-label=\"add to my hikes\">\r\n                                        <AddCircleIcon color='primary'/>\r\n                                    </IconButton>\r\n                                    <IconButton\r\n                                        className={clsx(classes.expand, {\r\n                                            [classes.expandOpen]: expanded,\r\n                                        })}\r\n                                        onClick={handleExpandClick}\r\n                                        aria-expanded={expanded}\r\n                                        aria-label=\"show more\"\r\n                                    >\r\n                                        <ExpandMoreIcon/>\r\n                                    </IconButton>\r\n                                </CardActions>\r\n                                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                                    <CardContent>\r\n\r\n\r\n                                        <Typography paragraph>\r\n                                            Участники (\r\n                                            {hikeDescription.numberOfMembers}\r\n                                            ) :\r\n                                            {hikeDescription && hikeDescription.members && hikeDescription.members.map((member, index) =>\r\n                                                <Typography>\r\n                                                    {member.name} {member.surname}\r\n                                                </Typography>\r\n                                            )}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Collapse>\r\n                            </Card>\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n                    :\r\n                    <Grid\r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"flex-start\"\r\n                        spacing={5}\r\n                    >\r\n                        <CircularProgress/>\r\n                    </Grid>\r\n            }\r\n        </div>\r\n    );\r\n};\r\nexport default HikeDescription;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000'\r\n    }\r\n}));\r\n\r\nconst URL = \"/hikeDescription\";\r\n\r\nconst Groups = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [value, setValue] = React.useState('1');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const [upcomingHikesByUser, setUpcomingHikesByUser] = useState([]);\r\n    const [pastHikesByUser, setPastHikesByUser] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    // const USER_TOKEN = localStorage.getItem('token').split('\"').join('');\r\n    const USER_TOKEN = \"$2a$05$WXUjPTXGPdFu/E5zcsFWw.CiUt6K/6XzSgvpFMTS1ChuAeBXOUXbm\";\r\n    const getUpcomingHikesByUser = async () => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/hikes/getUpcomingByUser\",\r\n                {headers: {Authorization: USER_TOKEN}}\r\n            )\r\n            .then(response => {\r\n                setUpcomingHikesByUser(response.data);\r\n            });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    const getPastHikesByUser = async () => {\r\n        try {\r\n            const data = await axios.get(\"https://stormy-escarpment-89406.herokuapp.com/hikes/getPastByUser\",\r\n                {headers: {Authorization: USER_TOKEN}}\r\n            )\r\n                .then(response => {\r\n                    setPastHikesByUser(response.data);\r\n                });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUpcomingHikesByUser();\r\n        getPastHikesByUser()\r\n    }, []);\r\n\r\n\r\n    if (!(upcomingHikesByUser)){\r\n        return (\r\n\r\n            <div>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            <Grid className={classes.grid} item xs={12} md={8} lg={3}>\r\n                                <Typography>Вы не были в походах</Typography>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    loading ?\r\n                            <TabContext value={value}>\r\n                                <AppBar position=\"static\">\r\n                                    <TabList onChange={handleChange} aria-label=\"simple tabs example\">\r\n                                        <Tab label=\"Предстоящие\" value=\"1\" />\r\n                                        <Tab label=\"Прошлые\" value=\"2\" />\r\n                                    </TabList>\r\n                                </AppBar>\r\n                                <TabPanel value=\"1\">\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"center\"\r\n                                        alignItems=\"flex-start\"\r\n                                        spacing={5}\r\n                                    >\r\n                                        {upcomingHikesByUser && upcomingHikesByUser.map((hike, index) =>\r\n                                            <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                                <Card className={classes.root}>\r\n                                                    <CardActionArea>\r\n                                                        <CardMedia\r\n                                                            component=\"img\"\r\n                                                            alt=\"Contemplative Reptile\"\r\n                                                            height=\"140\"\r\n                                                            image={hike.groupPhoto}\r\n                                                            title=\"Contemplative Reptile\"\r\n                                                        />\r\n                                                        <CardContent>\r\n                                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                                {hike.placeName}\r\n                                                            </Typography>\r\n\r\n                                                        </CardContent>\r\n                                                    </CardActionArea>\r\n                                                    <CardActions>\r\n                                                        <Link to={`${URL}/${hike.hikeId}`} className={classes.link}>\r\n                                                            <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n                                                                Выбрать\r\n                                                            </Button>\r\n                                                        </Link>\r\n                                                    </CardActions>\r\n                                                </Card>\r\n                                            </Grid>)}\r\n                                    </Grid>\r\n                                </TabPanel>\r\n                                <TabPanel value=\"2\">\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"center\"\r\n                                        alignItems=\"flex-start\"\r\n                                        spacing={5}\r\n                                    >\r\n                                        {pastHikesByUser && pastHikesByUser.map((hike, index) =>\r\n                                            <Grid className={classes.grid} item xs={12} md={8} lg={5}>\r\n                                                <Card className={classes.root}>\r\n                                                    <CardActionArea>\r\n                                                        <CardMedia\r\n                                                            component=\"img\"\r\n                                                            alt=\"Contemplative Reptile\"\r\n                                                            height=\"140\"\r\n                                                            image={hike.groupPhoto}\r\n                                                            title=\"Contemplative Reptile\"\r\n                                                        />\r\n                                                        <CardContent>\r\n                                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                                {hike.placeName}\r\n                                                            </Typography>\r\n\r\n                                                        </CardContent>\r\n                                                    </CardActionArea>\r\n                                                    <CardActions>\r\n                                                        <Link to={`${URL}/${hike.hikeId}`} className={classes.link}>\r\n                                                            <Button variant=\"contained\" color=\"primary\" size=\"small\">\r\n                                                                Выбрать\r\n                                                            </Button>\r\n                                                        </Link>\r\n                                                    </CardActions>\r\n                                                </Card>\r\n                                            </Grid>)}\r\n                                    </Grid>\r\n                                </TabPanel>\r\n                            </TabContext>\r\n                        :\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justify=\"center\"\r\n                            alignItems=\"flex-start\"\r\n                            spacing={5}\r\n                        >\r\n                            <CircularProgress/>\r\n                        </Grid>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\nexport default Groups;","import React, {useState, useEffect} from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {Link, Route, useRouteMatch, useParams} from \"react-router-dom\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport axios from \"axios\"\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {WhereToVote} from \"@material-ui/icons\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    grid: {\r\n        padding: 10,\r\n    },\r\n    link: {\r\n        textDecoration: \"none\",\r\n        color: '#000',\r\n    },\r\n}));\r\n\r\nconst MainPage = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n\r\n        <div>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"flex-start\"\r\n                spacing={5}\r\n            >\r\n                <Grid className={classes.grid}>\r\n                    <Typography variant=\"h6\">\r\n                        {props.name ? \"Добро пожаловать: \" + props.name + ' ' + props.surname : 'Вы не авторизованы'}\r\n                    </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\nexport default MainPage;","import React, {useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport {mainListItems} from './listItems';\r\nimport {Route, useRouteMatch} from \"react-router-dom\"\r\nimport Places from \"./Places\";\r\nimport Groups from \"./Groups\";\r\nimport Hikes from \"./Hikes\";\r\nimport PlacesByCity from \"./PlacesByCity\";\r\nimport PlaceDescription from \"./PlaceDescription\";\r\nimport GroupDescription from \"./GroupDescription\";\r\nimport GroupsByUser from \"./GroupsByUser\";\r\nimport HikeDescription from \"./HikeDescription\";\r\nimport HikesByUser from \"./HikesByUser\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport MainPage from \"./MainPage\";\r\n\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://www.bcompanion.kz/\">\r\n                BCompanion\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    toolbar: {\r\n        paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create(['width', 'margin'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    fixedHeight: {\r\n        height: 240,\r\n    },\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n    const [userInfo, setUserInfo] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getUserInfo = async () => {\r\n        try {\r\n            const data = await axios.get(`https://stormy-escarpment-89406.herokuapp.com/users/getUser?phone_number=${localStorage.getItem('phoneNum')}`\r\n            )\r\n            .then(response => {\r\n                setUserInfo(response.data);\r\n            });\r\n            setLoading(true);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(localStorage.getItem('phoneNum')=== null){\r\n            console.log('phone num doesnt exist');\r\n        } else {\r\n            getUserInfo();\r\n        }\r\n    }, []);\r\n\r\n    function sayHello() {\r\n        localStorage.clear();\r\n        setUserInfo(null);\r\n        window.location.href='https://www.kazatk.kz/myrzabek/bcompanion/index.html?logOut=true';\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const [openM, setOpenM] = React.useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpenM(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpenM(false);\r\n    };\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar style={{background: '#6DC068'}} position=\"absolute\"\r\n                    className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                    >\r\n                        <MenuIcon/>\r\n                    </IconButton>\r\n                    <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                        BCompanion\r\n                    </Typography>\r\n                    { loading ?\r\n                    <div>\r\n\r\n\r\n                        <Avatar onClick={handleOpen} alt=\"Avatar\"\r\n                                src=\"https://i.ibb.co/VqncVzX/avatar.png\"/>\r\n                        <Modal\r\n                            aria-labelledby=\"transition-modal-title\"\r\n                            aria-describedby=\"transition-modal-description\"\r\n                            className={classes.modal}\r\n                            open={openM}\r\n                            onClose={handleClose}\r\n                            closeAfterTransition\r\n                            BackdropComponent={Backdrop}\r\n                            BackdropProps={{\r\n                                timeout: 500,\r\n                            }}\r\n                        >\r\n                            <Fade in={openM}>\r\n                                <div className={classes.paper}>\r\n                                    <h2 id=\"transition-modal-title\">{userInfo ? userInfo.name : <a href='https://www.kazatk.kz/myrzabek/bcompanion/index.html?logOut=true'>Login</a>} {userInfo ? userInfo.surname : ''}</h2>\r\n                                    <p id=\"transition-modal-description\">{userInfo ? userInfo.phoneNumber : ''}</p>\r\n                                    {userInfo ? <Button onClick={sayHello} variant='contained' color='secondary'>\r\n                                        Выйти\r\n                                    </Button> : ''}\r\n                                </div>\r\n                            </Fade>\r\n                        </Modal>\r\n\r\n                    </div>\r\n                            :\r\n                            <CircularProgress/>\r\n                            }\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        <ChevronLeftIcon/>\r\n                    </IconButton>\r\n                </div>\r\n                <Divider/>\r\n                <List>{mainListItems}</List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <div className={classes.appBarSpacer}/>\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n                    <Grid container spacing={3}>\r\n                        {/* Chart */}\r\n                        <Grid item xs={12} md={8} lg={12}>\r\n                            <Paper>\r\n                                {loading ?\r\n                                    <Route path='/' exact render={() => <MainPage name={ userInfo ? userInfo.name : ''} surname = {userInfo ?userInfo.surname: ''}/>}/>\r\n                                    :\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"row\"\r\n                                        justify=\"center\"\r\n                                        alignItems=\"flex-start\"\r\n                                        spacing={5}\r\n                                    >\r\n                                        <CircularProgress/>\r\n                                    </Grid>\r\n                                }\r\n                                <Route path='/places' exact render={() => <Places/>}/>\r\n                                <Route path='/places/:cityName'\r\n                                       render={() => <PlacesByCity/>}/>\r\n                                <Route path='/groups' exact render={() => <Groups/>}/>\r\n                                <Route path='/groupsByUser' userToken={props.userToken} exact\r\n                                       render={() => <GroupsByUser/>}/>\r\n                                <Route path='/groupDescription/:groupName'\r\n                                       render={() => <GroupDescription/>}/>\r\n                                <Route path='/hikes' render={() => <Hikes/>}/>\r\n\r\n                                <Route path='/placeDescription/:placeName'\r\n                                       render={() => <PlaceDescription/>}/>\r\n                                <Route path='/hikeDescription/:hikeId'\r\n                                       render={() => <HikeDescription/>}/>\r\n                                <Route path='/hikesByUser'\r\n                                       render={() => <HikesByUser/>}/>\r\n\r\n                                {/*\r\n                                <Redirect from='/' to='/places'/>\r\n*/}\r\n\r\n                            </Paper>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Box pt={4}>\r\n                        <Copyright/>\r\n                    </Box>\r\n                </Container>\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Dashboard from \"./components/Dashboard\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction App() {\n    let url = window.location.href;\n    let params = (new URL(url)).searchParams;\n    let userPhoneNum = encodeURIComponent(params.get('phoneNum'));\n    if (userPhoneNum === null){\n\n    } else {\n        localStorage.setItem('phoneNum', userPhoneNum);\n    }\n    const [userToken, setUserToken] = useState(null);\n\n    const getUserToken = async () => {\n        try {\n            if (!(userPhoneNum)){\n                console.log(\"userPhoneNum is null\");\n            } else if (userPhoneNum) {\n                if (localStorage.getItem('token') === null || localStorage.getItem('phoneNum') === null) {\n\n                    const data = await axios\n                        .get(`https://stormy-escarpment-89406.herokuapp.com/users/getToken?phone_number=${localStorage.getItem('phoneNum')}`)\n                        .then(response => {\n                            localStorage.setItem('token', JSON.stringify(response.data));\n                            localStorage.setItem('phoneNum', userPhoneNum);\n                        })\n                        .catch(function (error) {\n                            console.log('No such user! Error in getting token!');\n                        });\n                } else if ((localStorage.getItem('phoneNum')) && localStorage.getItem('phoneNum') !== userPhoneNum){\n                    localStorage.clear();\n                    const data = await axios\n                        .get(`https://stormy-escarpment-89406.herokuapp.com/users/getToken?phone_number=${localStorage.getItem('phoneNum')}`)\n                        .then(response => {\n                            localStorage.setItem('token', JSON.stringify(response.data));\n                            localStorage.setItem('phoneNum', userPhoneNum);\n                        })\n                        .catch(function (error) {\n                            console.log('No such user! Error in getting token!');\n                        });\n                }\n            }\n\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        getUserToken();\n        console.log(\"User is logged in: \" + localStorage.getItem('token'));\n    }, userToken);\n\n    return (\n        <BrowserRouter>\n            <div>\n                <Dashboard/>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}